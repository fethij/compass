[{"name":"abstract suspend fun placeFromAddress(address: String): List<Place>","description":"dev.jordond.compass.geocoder.mobile.MobilePlatformGeocoder.placeFromAddress","location":"compass-geocoder-mobile/dev.jordond.compass.geocoder.mobile/-mobile-platform-geocoder/place-from-address.html","searchKeys":["placeFromAddress","abstract suspend fun placeFromAddress(address: String): List<Place>","dev.jordond.compass.geocoder.mobile.MobilePlatformGeocoder.placeFromAddress"]},{"name":"fun Geocoder(dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","description":"dev.jordond.compass.geocoder.mobile.Geocoder","location":"compass-geocoder-mobile/dev.jordond.compass.geocoder.mobile/-geocoder.html","searchKeys":["Geocoder","fun Geocoder(dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","dev.jordond.compass.geocoder.mobile.Geocoder"]},{"name":"fun Geocoder.Companion.mobile(dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","description":"dev.jordond.compass.geocoder.mobile.mobile","location":"compass-geocoder-mobile/dev.jordond.compass.geocoder.mobile/mobile.html","searchKeys":["mobile","fun Geocoder.Companion.mobile(dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","dev.jordond.compass.geocoder.mobile.mobile"]},{"name":"fun MobileGeocoder(dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","description":"dev.jordond.compass.geocoder.mobile.MobileGeocoder","location":"compass-geocoder-mobile/dev.jordond.compass.geocoder.mobile/-mobile-geocoder.html","searchKeys":["MobileGeocoder","fun MobileGeocoder(dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","dev.jordond.compass.geocoder.mobile.MobileGeocoder"]},{"name":"fun MobilePlatformGeocoder(): MobilePlatformGeocoder","description":"dev.jordond.compass.geocoder.mobile.MobilePlatformGeocoder","location":"compass-geocoder-mobile/dev.jordond.compass.geocoder.mobile/-mobile-platform-geocoder.html","searchKeys":["MobilePlatformGeocoder","fun MobilePlatformGeocoder(): MobilePlatformGeocoder","dev.jordond.compass.geocoder.mobile.MobilePlatformGeocoder"]},{"name":"fun PlatformGeocoder.Companion.mobile(): MobilePlatformGeocoder","description":"dev.jordond.compass.geocoder.mobile.mobile","location":"compass-geocoder-mobile/dev.jordond.compass.geocoder.mobile/mobile.html","searchKeys":["mobile","fun PlatformGeocoder.Companion.mobile(): MobilePlatformGeocoder","dev.jordond.compass.geocoder.mobile.mobile"]},{"name":"interface MobilePlatformGeocoder : PlatformGeocoder","description":"dev.jordond.compass.geocoder.mobile.MobilePlatformGeocoder","location":"compass-geocoder-mobile/dev.jordond.compass.geocoder.mobile/-mobile-platform-geocoder/index.html","searchKeys":["MobilePlatformGeocoder","interface MobilePlatformGeocoder : PlatformGeocoder","dev.jordond.compass.geocoder.mobile.MobilePlatformGeocoder"]},{"name":"suspend fun Geocoder.placesOrNull(address: String): List<Place>?","description":"dev.jordond.compass.geocoder.mobile.placesOrNull","location":"compass-geocoder-mobile/dev.jordond.compass.geocoder.mobile/places-or-null.html","searchKeys":["placesOrNull","suspend fun Geocoder.placesOrNull(address: String): List<Place>?","dev.jordond.compass.geocoder.mobile.placesOrNull"]},{"name":"abstract fun isAvailable(): Boolean","description":"dev.jordond.compass.geocoder.Geocoder.isAvailable","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder/is-available.html","searchKeys":["isAvailable","abstract fun isAvailable(): Boolean","dev.jordond.compass.geocoder.Geocoder.isAvailable"]},{"name":"abstract fun isAvailable(): Boolean","description":"dev.jordond.compass.geocoder.PlatformGeocoder.isAvailable","location":"compass-geocoder/dev.jordond.compass.geocoder/-platform-geocoder/is-available.html","searchKeys":["isAvailable","abstract fun isAvailable(): Boolean","dev.jordond.compass.geocoder.PlatformGeocoder.isAvailable"]},{"name":"abstract suspend fun forward(address: String): GeocoderResult<Coordinates>","description":"dev.jordond.compass.geocoder.ForwardGeocoder.forward","location":"compass-geocoder/dev.jordond.compass.geocoder/-forward-geocoder/forward.html","searchKeys":["forward","abstract suspend fun forward(address: String): GeocoderResult<Coordinates>","dev.jordond.compass.geocoder.ForwardGeocoder.forward"]},{"name":"abstract suspend fun forward(address: String): List<Coordinates>","description":"dev.jordond.compass.geocoder.PlatformGeocoder.forward","location":"compass-geocoder/dev.jordond.compass.geocoder/-platform-geocoder/forward.html","searchKeys":["forward","abstract suspend fun forward(address: String): List<Coordinates>","dev.jordond.compass.geocoder.PlatformGeocoder.forward"]},{"name":"abstract suspend fun reverse(latitude: Double, longitude: Double): GeocoderResult<Place>","description":"dev.jordond.compass.geocoder.ReverseGeocoder.reverse","location":"compass-geocoder/dev.jordond.compass.geocoder/-reverse-geocoder/reverse.html","searchKeys":["reverse","abstract suspend fun reverse(latitude: Double, longitude: Double): GeocoderResult<Place>","dev.jordond.compass.geocoder.ReverseGeocoder.reverse"]},{"name":"abstract suspend fun reverse(latitude: Double, longitude: Double): List<Place>","description":"dev.jordond.compass.geocoder.PlatformGeocoder.reverse","location":"compass-geocoder/dev.jordond.compass.geocoder/-platform-geocoder/reverse.html","searchKeys":["reverse","abstract suspend fun reverse(latitude: Double, longitude: Double): List<Place>","dev.jordond.compass.geocoder.PlatformGeocoder.reverse"]},{"name":"abstract val platformGeocoder: PlatformGeocoder","description":"dev.jordond.compass.geocoder.Geocoder.platformGeocoder","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder/platform-geocoder.html","searchKeys":["platformGeocoder","abstract val platformGeocoder: PlatformGeocoder","dev.jordond.compass.geocoder.Geocoder.platformGeocoder"]},{"name":"class GeocodeException(message: String?) : Throwable","description":"dev.jordond.compass.geocoder.exception.GeocodeException","location":"compass-geocoder/dev.jordond.compass.geocoder.exception/-geocode-exception/index.html","searchKeys":["GeocodeException","class GeocodeException(message: String?) : Throwable","dev.jordond.compass.geocoder.exception.GeocodeException"]},{"name":"class GeocodeFailed(val message: String) : GeocoderResult.Error","description":"dev.jordond.compass.geocoder.GeocoderResult.GeocodeFailed","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/-geocode-failed/index.html","searchKeys":["GeocodeFailed","class GeocodeFailed(val message: String) : GeocoderResult.Error","dev.jordond.compass.geocoder.GeocoderResult.GeocodeFailed"]},{"name":"class Success<T>(val data: List<T>) : GeocoderResult<T> ","description":"dev.jordond.compass.geocoder.GeocoderResult.Success","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/-success/index.html","searchKeys":["Success","class Success<T>(val data: List<T>) : GeocoderResult<T> ","dev.jordond.compass.geocoder.GeocoderResult.Success"]},{"name":"const val DefaultMaxResults: Int = 5","description":"dev.jordond.compass.geocoder.Geocoder.Companion.DefaultMaxResults","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder/-companion/-default-max-results.html","searchKeys":["DefaultMaxResults","const val DefaultMaxResults: Int = 5","dev.jordond.compass.geocoder.Geocoder.Companion.DefaultMaxResults"]},{"name":"constructor(data: List<T>)","description":"dev.jordond.compass.geocoder.GeocoderResult.Success.Success","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/-success/-success.html","searchKeys":["Success","constructor(data: List<T>)","dev.jordond.compass.geocoder.GeocoderResult.Success.Success"]},{"name":"constructor(message: String)","description":"dev.jordond.compass.geocoder.GeocoderResult.GeocodeFailed.GeocodeFailed","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/-geocode-failed/-geocode-failed.html","searchKeys":["GeocodeFailed","constructor(message: String)","dev.jordond.compass.geocoder.GeocoderResult.GeocodeFailed.GeocodeFailed"]},{"name":"constructor(message: String?)","description":"dev.jordond.compass.geocoder.exception.GeocodeException.GeocodeException","location":"compass-geocoder/dev.jordond.compass.geocoder.exception/-geocode-exception/-geocode-exception.html","searchKeys":["GeocodeException","constructor(message: String?)","dev.jordond.compass.geocoder.exception.GeocodeException.GeocodeException"]},{"name":"fun ForwardGeocoder(platformGeocoder: PlatformGeocoder, dispatcher: CoroutineDispatcher = Dispatchers.Default): ForwardGeocoder","description":"dev.jordond.compass.geocoder.ForwardGeocoder","location":"compass-geocoder/dev.jordond.compass.geocoder/-forward-geocoder.html","searchKeys":["ForwardGeocoder","fun ForwardGeocoder(platformGeocoder: PlatformGeocoder, dispatcher: CoroutineDispatcher = Dispatchers.Default): ForwardGeocoder","dev.jordond.compass.geocoder.ForwardGeocoder"]},{"name":"fun Geocoder(platformGeocoder: PlatformGeocoder, dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","description":"dev.jordond.compass.geocoder.Geocoder","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder.html","searchKeys":["Geocoder","fun Geocoder(platformGeocoder: PlatformGeocoder, dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","dev.jordond.compass.geocoder.Geocoder"]},{"name":"fun ReverseGeocoder(platformGeocoder: PlatformGeocoder, dispatcher: CoroutineDispatcher = Dispatchers.Default): ReverseGeocoder","description":"dev.jordond.compass.geocoder.ReverseGeocoder","location":"compass-geocoder/dev.jordond.compass.geocoder/-reverse-geocoder.html","searchKeys":["ReverseGeocoder","fun ReverseGeocoder(platformGeocoder: PlatformGeocoder, dispatcher: CoroutineDispatcher = Dispatchers.Default): ReverseGeocoder","dev.jordond.compass.geocoder.ReverseGeocoder"]},{"name":"interface Error : GeocoderResult<Nothing> ","description":"dev.jordond.compass.geocoder.GeocoderResult.Error","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/-error/index.html","searchKeys":["Error","interface Error : GeocoderResult<Nothing> ","dev.jordond.compass.geocoder.GeocoderResult.Error"]},{"name":"interface ForwardGeocoder","description":"dev.jordond.compass.geocoder.ForwardGeocoder","location":"compass-geocoder/dev.jordond.compass.geocoder/-forward-geocoder/index.html","searchKeys":["ForwardGeocoder","interface ForwardGeocoder","dev.jordond.compass.geocoder.ForwardGeocoder"]},{"name":"interface Geocoder : ForwardGeocoder, ReverseGeocoder","description":"dev.jordond.compass.geocoder.Geocoder","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder/index.html","searchKeys":["Geocoder","interface Geocoder : ForwardGeocoder, ReverseGeocoder","dev.jordond.compass.geocoder.Geocoder"]},{"name":"interface PlatformGeocoder","description":"dev.jordond.compass.geocoder.PlatformGeocoder","location":"compass-geocoder/dev.jordond.compass.geocoder/-platform-geocoder/index.html","searchKeys":["PlatformGeocoder","interface PlatformGeocoder","dev.jordond.compass.geocoder.PlatformGeocoder"]},{"name":"interface ReverseGeocoder","description":"dev.jordond.compass.geocoder.ReverseGeocoder","location":"compass-geocoder/dev.jordond.compass.geocoder/-reverse-geocoder/index.html","searchKeys":["ReverseGeocoder","interface ReverseGeocoder","dev.jordond.compass.geocoder.ReverseGeocoder"]},{"name":"object Companion","description":"dev.jordond.compass.geocoder.Geocoder.Companion","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder/-companion/index.html","searchKeys":["Companion","object Companion","dev.jordond.compass.geocoder.Geocoder.Companion"]},{"name":"object Companion","description":"dev.jordond.compass.geocoder.PlatformGeocoder.Companion","location":"compass-geocoder/dev.jordond.compass.geocoder/-platform-geocoder/-companion/index.html","searchKeys":["Companion","object Companion","dev.jordond.compass.geocoder.PlatformGeocoder.Companion"]},{"name":"object InvalidCoordinates : GeocoderResult.Error","description":"dev.jordond.compass.geocoder.GeocoderResult.InvalidCoordinates","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/-invalid-coordinates/index.html","searchKeys":["InvalidCoordinates","object InvalidCoordinates : GeocoderResult.Error","dev.jordond.compass.geocoder.GeocoderResult.InvalidCoordinates"]},{"name":"object NotFound : GeocoderResult.Error","description":"dev.jordond.compass.geocoder.GeocoderResult.NotFound","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/-not-found/index.html","searchKeys":["NotFound","object NotFound : GeocoderResult.Error","dev.jordond.compass.geocoder.GeocoderResult.NotFound"]},{"name":"object NotSupported : GeocoderResult.Error","description":"dev.jordond.compass.geocoder.GeocoderResult.NotSupported","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/-not-supported/index.html","searchKeys":["NotSupported","object NotSupported : GeocoderResult.Error","dev.jordond.compass.geocoder.GeocoderResult.NotSupported"]},{"name":"object NotSupportedPlatformGeocoder : PlatformGeocoder","description":"dev.jordond.compass.geocoder.NotSupportedPlatformGeocoder","location":"compass-geocoder/dev.jordond.compass.geocoder/-not-supported-platform-geocoder/index.html","searchKeys":["NotSupportedPlatformGeocoder","object NotSupportedPlatformGeocoder : PlatformGeocoder","dev.jordond.compass.geocoder.NotSupportedPlatformGeocoder"]},{"name":"open fun errorOrNull(): GeocoderResult.Error?","description":"dev.jordond.compass.geocoder.GeocoderResult.errorOrNull","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/error-or-null.html","searchKeys":["errorOrNull","open fun errorOrNull(): GeocoderResult.Error?","dev.jordond.compass.geocoder.GeocoderResult.errorOrNull"]},{"name":"open fun getFirstOrNull(): T?","description":"dev.jordond.compass.geocoder.GeocoderResult.getFirstOrNull","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/get-first-or-null.html","searchKeys":["getFirstOrNull","open fun getFirstOrNull(): T?","dev.jordond.compass.geocoder.GeocoderResult.getFirstOrNull"]},{"name":"open fun getOrNull(): List<T>?","description":"dev.jordond.compass.geocoder.GeocoderResult.getOrNull","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/get-or-null.html","searchKeys":["getOrNull","open fun getOrNull(): List<T>?","dev.jordond.compass.geocoder.GeocoderResult.getOrNull"]},{"name":"open fun onFailed(block: (GeocoderResult.Error) -> Unit): GeocoderResult<T>","description":"dev.jordond.compass.geocoder.GeocoderResult.onFailed","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/on-failed.html","searchKeys":["onFailed","open fun onFailed(block: (GeocoderResult.Error) -> Unit): GeocoderResult<T>","dev.jordond.compass.geocoder.GeocoderResult.onFailed"]},{"name":"open fun onSuccess(block: (List<T>) -> Unit): GeocoderResult<T>","description":"dev.jordond.compass.geocoder.GeocoderResult.onSuccess","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/on-success.html","searchKeys":["onSuccess","open fun onSuccess(block: (List<T>) -> Unit): GeocoderResult<T>","dev.jordond.compass.geocoder.GeocoderResult.onSuccess"]},{"name":"open override fun isAvailable(): Boolean","description":"dev.jordond.compass.geocoder.NotSupportedPlatformGeocoder.isAvailable","location":"compass-geocoder/dev.jordond.compass.geocoder/-not-supported-platform-geocoder/is-available.html","searchKeys":["isAvailable","open override fun isAvailable(): Boolean","dev.jordond.compass.geocoder.NotSupportedPlatformGeocoder.isAvailable"]},{"name":"open suspend fun locations(address: String): GeocoderResult<Coordinates>","description":"dev.jordond.compass.geocoder.ForwardGeocoder.locations","location":"compass-geocoder/dev.jordond.compass.geocoder/-forward-geocoder/locations.html","searchKeys":["locations","open suspend fun locations(address: String): GeocoderResult<Coordinates>","dev.jordond.compass.geocoder.ForwardGeocoder.locations"]},{"name":"open suspend fun places(coordinates: Coordinates): GeocoderResult<Place>","description":"dev.jordond.compass.geocoder.ReverseGeocoder.places","location":"compass-geocoder/dev.jordond.compass.geocoder/-reverse-geocoder/places.html","searchKeys":["places","open suspend fun places(coordinates: Coordinates): GeocoderResult<Place>","dev.jordond.compass.geocoder.ReverseGeocoder.places"]},{"name":"open suspend fun places(latitude: Double, longitude: Double): GeocoderResult<Place>","description":"dev.jordond.compass.geocoder.ReverseGeocoder.places","location":"compass-geocoder/dev.jordond.compass.geocoder/-reverse-geocoder/places.html","searchKeys":["places","open suspend fun places(latitude: Double, longitude: Double): GeocoderResult<Place>","dev.jordond.compass.geocoder.ReverseGeocoder.places"]},{"name":"open suspend fun reverse(coordinates: Coordinates): GeocoderResult<Place>","description":"dev.jordond.compass.geocoder.ReverseGeocoder.reverse","location":"compass-geocoder/dev.jordond.compass.geocoder/-reverse-geocoder/reverse.html","searchKeys":["reverse","open suspend fun reverse(coordinates: Coordinates): GeocoderResult<Place>","dev.jordond.compass.geocoder.ReverseGeocoder.reverse"]},{"name":"open suspend override fun forward(address: String): List<Coordinates>","description":"dev.jordond.compass.geocoder.NotSupportedPlatformGeocoder.forward","location":"compass-geocoder/dev.jordond.compass.geocoder/-not-supported-platform-geocoder/forward.html","searchKeys":["forward","open suspend override fun forward(address: String): List<Coordinates>","dev.jordond.compass.geocoder.NotSupportedPlatformGeocoder.forward"]},{"name":"open suspend override fun reverse(latitude: Double, longitude: Double): List<Place>","description":"dev.jordond.compass.geocoder.NotSupportedPlatformGeocoder.reverse","location":"compass-geocoder/dev.jordond.compass.geocoder/-not-supported-platform-geocoder/reverse.html","searchKeys":["reverse","open suspend override fun reverse(latitude: Double, longitude: Double): List<Place>","dev.jordond.compass.geocoder.NotSupportedPlatformGeocoder.reverse"]},{"name":"open val isError: Boolean","description":"dev.jordond.compass.geocoder.GeocoderResult.isError","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/is-error.html","searchKeys":["isError","open val isError: Boolean","dev.jordond.compass.geocoder.GeocoderResult.isError"]},{"name":"sealed interface GeocoderResult<out T>","description":"dev.jordond.compass.geocoder.GeocoderResult","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/index.html","searchKeys":["GeocoderResult","sealed interface GeocoderResult<out T>","dev.jordond.compass.geocoder.GeocoderResult"]},{"name":"suspend fun Geocoder.coordinatesListOrNull(address: String): List<Coordinates>?","description":"dev.jordond.compass.geocoder.coordinatesListOrNull","location":"compass-geocoder/dev.jordond.compass.geocoder/coordinates-list-or-null.html","searchKeys":["coordinatesListOrNull","suspend fun Geocoder.coordinatesListOrNull(address: String): List<Coordinates>?","dev.jordond.compass.geocoder.coordinatesListOrNull"]},{"name":"suspend fun Geocoder.coordinatesOrNull(address: String): Coordinates?","description":"dev.jordond.compass.geocoder.coordinatesOrNull","location":"compass-geocoder/dev.jordond.compass.geocoder/coordinates-or-null.html","searchKeys":["coordinatesOrNull","suspend fun Geocoder.coordinatesOrNull(address: String): Coordinates?","dev.jordond.compass.geocoder.coordinatesOrNull"]},{"name":"suspend fun Geocoder.placeOrNull(coordinates: Coordinates): Place?","description":"dev.jordond.compass.geocoder.placeOrNull","location":"compass-geocoder/dev.jordond.compass.geocoder/place-or-null.html","searchKeys":["placeOrNull","suspend fun Geocoder.placeOrNull(coordinates: Coordinates): Place?","dev.jordond.compass.geocoder.placeOrNull"]},{"name":"suspend fun Geocoder.placeOrNull(latitude: Double, longitude: Double): Place?","description":"dev.jordond.compass.geocoder.placeOrNull","location":"compass-geocoder/dev.jordond.compass.geocoder/place-or-null.html","searchKeys":["placeOrNull","suspend fun Geocoder.placeOrNull(latitude: Double, longitude: Double): Place?","dev.jordond.compass.geocoder.placeOrNull"]},{"name":"suspend fun Geocoder.placesOrNull(coordinates: Coordinates): List<Place>?","description":"dev.jordond.compass.geocoder.placesOrNull","location":"compass-geocoder/dev.jordond.compass.geocoder/places-or-null.html","searchKeys":["placesOrNull","suspend fun Geocoder.placesOrNull(coordinates: Coordinates): List<Place>?","dev.jordond.compass.geocoder.placesOrNull"]},{"name":"suspend fun Geocoder.placesOrNull(latitude: Double, longitude: Double): List<Place>?","description":"dev.jordond.compass.geocoder.placesOrNull","location":"compass-geocoder/dev.jordond.compass.geocoder/places-or-null.html","searchKeys":["placesOrNull","suspend fun Geocoder.placesOrNull(latitude: Double, longitude: Double): List<Place>?","dev.jordond.compass.geocoder.placesOrNull"]},{"name":"val data: List<T>","description":"dev.jordond.compass.geocoder.GeocoderResult.Success.data","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/-success/data.html","searchKeys":["data","val data: List<T>","dev.jordond.compass.geocoder.GeocoderResult.Success.data"]},{"name":"val message: String","description":"dev.jordond.compass.geocoder.GeocoderResult.GeocodeFailed.message","location":"compass-geocoder/dev.jordond.compass.geocoder/-geocoder-result/-geocode-failed/message.html","searchKeys":["message","val message: String","dev.jordond.compass.geocoder.GeocoderResult.GeocodeFailed.message"]},{"name":"AR","description":"dev.jordond.compass.geocoder.web.parameter.WorldView.AR","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-world-view/-a-r/index.html","searchKeys":["AR","AR","dev.jordond.compass.geocoder.web.parameter.WorldView.AR"]},{"name":"Address","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Address","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/-address/index.html","searchKeys":["Address","Address","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Address"]},{"name":"CN","description":"dev.jordond.compass.geocoder.web.parameter.WorldView.CN","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-world-view/-c-n/index.html","searchKeys":["CN","CN","dev.jordond.compass.geocoder.web.parameter.WorldView.CN"]},{"name":"Country","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Country","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/-country/index.html","searchKeys":["Country","Country","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Country"]},{"name":"District","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.District","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/-district/index.html","searchKeys":["District","District","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.District"]},{"name":"IN","description":"dev.jordond.compass.geocoder.web.parameter.WorldView.IN","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-world-view/-i-n/index.html","searchKeys":["IN","IN","dev.jordond.compass.geocoder.web.parameter.WorldView.IN"]},{"name":"JP","description":"dev.jordond.compass.geocoder.web.parameter.WorldView.JP","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-world-view/-j-p/index.html","searchKeys":["JP","JP","dev.jordond.compass.geocoder.web.parameter.WorldView.JP"]},{"name":"Locality","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Locality","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/-locality/index.html","searchKeys":["Locality","Locality","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Locality"]},{"name":"MA","description":"dev.jordond.compass.geocoder.web.parameter.WorldView.MA","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-world-view/-m-a/index.html","searchKeys":["MA","MA","dev.jordond.compass.geocoder.web.parameter.WorldView.MA"]},{"name":"Neighborhood","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Neighborhood","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/-neighborhood/index.html","searchKeys":["Neighborhood","Neighborhood","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Neighborhood"]},{"name":"Place","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Place","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/-place/index.html","searchKeys":["Place","Place","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Place"]},{"name":"Postcode","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Postcode","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/-postcode/index.html","searchKeys":["Postcode","Postcode","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Postcode"]},{"name":"RU","description":"dev.jordond.compass.geocoder.web.parameter.WorldView.RU","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-world-view/-r-u/index.html","searchKeys":["RU","RU","dev.jordond.compass.geocoder.web.parameter.WorldView.RU"]},{"name":"Region","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Region","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/-region/index.html","searchKeys":["Region","Region","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Region"]},{"name":"Street","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Street","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/-street/index.html","searchKeys":["Street","Street","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.Street"]},{"name":"TR","description":"dev.jordond.compass.geocoder.web.parameter.WorldView.TR","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-world-view/-t-r/index.html","searchKeys":["TR","TR","dev.jordond.compass.geocoder.web.parameter.WorldView.TR"]},{"name":"US","description":"dev.jordond.compass.geocoder.web.parameter.WorldView.US","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-world-view/-u-s/index.html","searchKeys":["US","US","dev.jordond.compass.geocoder.web.parameter.WorldView.US"]},{"name":"class MapBoxBoundingBox(val minLongitude: Double, val minLatitude: Double, val maxLongitude: Double, val maxLatitude: Double) : QueryParamValue","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-bounding-box/index.html","searchKeys":["MapBoxBoundingBox","class MapBoxBoundingBox(val minLongitude: Double, val minLatitude: Double, val maxLongitude: Double, val maxLatitude: Double) : QueryParamValue","dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox"]},{"name":"class MapBoxForwardEndpoint(apiKey: String, parameters: MapBoxParameters = MapBoxParameters()) : HttpApiEndpoint<String, List<Coordinates>> ","description":"dev.jordond.compass.geocoder.web.MapBoxForwardEndpoint","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-forward-endpoint/index.html","searchKeys":["MapBoxForwardEndpoint","class MapBoxForwardEndpoint(apiKey: String, parameters: MapBoxParameters = MapBoxParameters()) : HttpApiEndpoint<String, List<Coordinates>> ","dev.jordond.compass.geocoder.web.MapBoxForwardEndpoint"]},{"name":"class MapBoxParameters(val permanent: Boolean = false, val autocomplete: Boolean = true, val limit: Int? = null, val bbox: MapBoxBoundingBox? = null, val country: String? = null, val language: String? = null, val proximity: String? = null, val types: MapBoxTypesList? = null, val worldView: WorldView? = null) : QueryParameters","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParameters","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters/index.html","searchKeys":["MapBoxParameters","class MapBoxParameters(val permanent: Boolean = false, val autocomplete: Boolean = true, val limit: Int? = null, val bbox: MapBoxBoundingBox? = null, val country: String? = null, val language: String? = null, val proximity: String? = null, val types: MapBoxTypesList? = null, val worldView: WorldView? = null) : QueryParameters","dev.jordond.compass.geocoder.web.parameter.MapBoxParameters"]},{"name":"class MapBoxParametersBuilder : QueryParametersBuilder<MapBoxParameters> ","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters-builder/index.html","searchKeys":["MapBoxParametersBuilder","class MapBoxParametersBuilder : QueryParametersBuilder<MapBoxParameters> ","dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder"]},{"name":"class MapBoxReverseEndpoint(apiKey: String, parameters: MapBoxParameters = MapBoxParameters()) : HttpApiEndpoint<Coordinates, List<Place>> ","description":"dev.jordond.compass.geocoder.web.MapBoxReverseEndpoint","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-reverse-endpoint/index.html","searchKeys":["MapBoxReverseEndpoint","class MapBoxReverseEndpoint(apiKey: String, parameters: MapBoxParameters = MapBoxParameters()) : HttpApiEndpoint<Coordinates, List<Place>> ","dev.jordond.compass.geocoder.web.MapBoxReverseEndpoint"]},{"name":"class MapBoxTypesList(val values: List<MapBoxTypes>) : QueryParamListValue<MapBoxTypes> ","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypesList","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types-list/index.html","searchKeys":["MapBoxTypesList","class MapBoxTypesList(val values: List<MapBoxTypes>) : QueryParamListValue<MapBoxTypes> ","dev.jordond.compass.geocoder.web.parameter.MapBoxTypesList"]},{"name":"constructor()","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.MapBoxParametersBuilder","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters-builder/-map-box-parameters-builder.html","searchKeys":["MapBoxParametersBuilder","constructor()","dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.MapBoxParametersBuilder"]},{"name":"constructor(apiKey: String, block: MapBoxParametersBuilder.() -> Unit)","description":"dev.jordond.compass.geocoder.web.MapBoxForwardEndpoint.MapBoxForwardEndpoint","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-forward-endpoint/-map-box-forward-endpoint.html","searchKeys":["MapBoxForwardEndpoint","constructor(apiKey: String, block: MapBoxParametersBuilder.() -> Unit)","dev.jordond.compass.geocoder.web.MapBoxForwardEndpoint.MapBoxForwardEndpoint"]},{"name":"constructor(apiKey: String, block: MapBoxParametersBuilder.() -> Unit)","description":"dev.jordond.compass.geocoder.web.MapBoxReverseEndpoint.MapBoxReverseEndpoint","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-reverse-endpoint/-map-box-reverse-endpoint.html","searchKeys":["MapBoxReverseEndpoint","constructor(apiKey: String, block: MapBoxParametersBuilder.() -> Unit)","dev.jordond.compass.geocoder.web.MapBoxReverseEndpoint.MapBoxReverseEndpoint"]},{"name":"constructor(apiKey: String, parameters: MapBoxParameters = MapBoxParameters())","description":"dev.jordond.compass.geocoder.web.MapBoxForwardEndpoint.MapBoxForwardEndpoint","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-forward-endpoint/-map-box-forward-endpoint.html","searchKeys":["MapBoxForwardEndpoint","constructor(apiKey: String, parameters: MapBoxParameters = MapBoxParameters())","dev.jordond.compass.geocoder.web.MapBoxForwardEndpoint.MapBoxForwardEndpoint"]},{"name":"constructor(apiKey: String, parameters: MapBoxParameters = MapBoxParameters())","description":"dev.jordond.compass.geocoder.web.MapBoxReverseEndpoint.MapBoxReverseEndpoint","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-reverse-endpoint/-map-box-reverse-endpoint.html","searchKeys":["MapBoxReverseEndpoint","constructor(apiKey: String, parameters: MapBoxParameters = MapBoxParameters())","dev.jordond.compass.geocoder.web.MapBoxReverseEndpoint.MapBoxReverseEndpoint"]},{"name":"constructor(minLongitude: Double, minLatitude: Double, maxLongitude: Double, maxLatitude: Double)","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.MapBoxBoundingBox","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-bounding-box/-map-box-bounding-box.html","searchKeys":["MapBoxBoundingBox","constructor(minLongitude: Double, minLatitude: Double, maxLongitude: Double, maxLatitude: Double)","dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.MapBoxBoundingBox"]},{"name":"constructor(permanent: Boolean = false, autocomplete: Boolean = true, limit: Int? = null, bbox: MapBoxBoundingBox? = null, country: String? = null, language: String? = null, proximity: String? = null, types: MapBoxTypesList? = null, worldView: WorldView? = null)","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.MapBoxParameters","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters/-map-box-parameters.html","searchKeys":["MapBoxParameters","constructor(permanent: Boolean = false, autocomplete: Boolean = true, limit: Int? = null, bbox: MapBoxBoundingBox? = null, country: String? = null, language: String? = null, proximity: String? = null, types: MapBoxTypesList? = null, worldView: WorldView? = null)","dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.MapBoxParameters"]},{"name":"constructor(values: List<MapBoxTypes>)","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypesList.MapBoxTypesList","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types-list/-map-box-types-list.html","searchKeys":["MapBoxTypesList","constructor(values: List<MapBoxTypes>)","dev.jordond.compass.geocoder.web.parameter.MapBoxTypesList.MapBoxTypesList"]},{"name":"constructor(vararg values: MapBoxTypes)","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypesList.MapBoxTypesList","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types-list/-map-box-types-list.html","searchKeys":["MapBoxTypesList","constructor(vararg values: MapBoxTypes)","dev.jordond.compass.geocoder.web.parameter.MapBoxTypesList.MapBoxTypesList"]},{"name":"enum MapBoxTypes : Enum<MapBoxTypes> , QueryParamValue","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/index.html","searchKeys":["MapBoxTypes","enum MapBoxTypes : Enum<MapBoxTypes> , QueryParamValue","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes"]},{"name":"enum WorldView : Enum<WorldView> , QueryParamValue","description":"dev.jordond.compass.geocoder.web.parameter.WorldView","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-world-view/index.html","searchKeys":["WorldView","enum WorldView : Enum<WorldView> , QueryParamValue","dev.jordond.compass.geocoder.web.parameter.WorldView"]},{"name":"fun Geocoder.Companion.mapBox(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default, block: MapBoxParametersBuilder.() -> Unit): Geocoder","description":"dev.jordond.compass.geocoder.web.mapBox","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/map-box.html","searchKeys":["mapBox","fun Geocoder.Companion.mapBox(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default, block: MapBoxParametersBuilder.() -> Unit): Geocoder","dev.jordond.compass.geocoder.web.mapBox"]},{"name":"fun Geocoder.Companion.mapBox(apiKey: String, parameters: MapBoxParameters = MapBoxParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","description":"dev.jordond.compass.geocoder.web.mapBox","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/map-box.html","searchKeys":["mapBox","fun Geocoder.Companion.mapBox(apiKey: String, parameters: MapBoxParameters = MapBoxParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","dev.jordond.compass.geocoder.web.mapBox"]},{"name":"fun MapBoxGeocoder(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default, block: MapBoxParametersBuilder.() -> Unit): Geocoder","description":"dev.jordond.compass.geocoder.web.MapBoxGeocoder","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-geocoder.html","searchKeys":["MapBoxGeocoder","fun MapBoxGeocoder(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default, block: MapBoxParametersBuilder.() -> Unit): Geocoder","dev.jordond.compass.geocoder.web.MapBoxGeocoder"]},{"name":"fun MapBoxGeocoder(apiKey: String, parameters: MapBoxParameters = MapBoxParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","description":"dev.jordond.compass.geocoder.web.MapBoxGeocoder","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-geocoder.html","searchKeys":["MapBoxGeocoder","fun MapBoxGeocoder(apiKey: String, parameters: MapBoxParameters = MapBoxParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","dev.jordond.compass.geocoder.web.MapBoxGeocoder"]},{"name":"fun MapBoxPlatformGeocoder(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), block: MapBoxParametersBuilder.() -> Unit): MapBoxPlatformGeocoder","description":"dev.jordond.compass.geocoder.web.MapBoxPlatformGeocoder","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-platform-geocoder.html","searchKeys":["MapBoxPlatformGeocoder","fun MapBoxPlatformGeocoder(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), block: MapBoxParametersBuilder.() -> Unit): MapBoxPlatformGeocoder","dev.jordond.compass.geocoder.web.MapBoxPlatformGeocoder"]},{"name":"fun MapBoxPlatformGeocoder(apiKey: String, parameters: MapBoxParameters = MapBoxParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json)): MapBoxPlatformGeocoder","description":"dev.jordond.compass.geocoder.web.MapBoxPlatformGeocoder","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-platform-geocoder.html","searchKeys":["MapBoxPlatformGeocoder","fun MapBoxPlatformGeocoder(apiKey: String, parameters: MapBoxParameters = MapBoxParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json)): MapBoxPlatformGeocoder","dev.jordond.compass.geocoder.web.MapBoxPlatformGeocoder"]},{"name":"fun PlatformGeocoder.Companion.mapBox(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), block: MapBoxParametersBuilder.() -> Unit): MapBoxPlatformGeocoder","description":"dev.jordond.compass.geocoder.web.mapBox","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/map-box.html","searchKeys":["mapBox","fun PlatformGeocoder.Companion.mapBox(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), block: MapBoxParametersBuilder.() -> Unit): MapBoxPlatformGeocoder","dev.jordond.compass.geocoder.web.mapBox"]},{"name":"fun PlatformGeocoder.Companion.mapBox(apiKey: String, parameters: MapBoxParameters = MapBoxParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json)): MapBoxPlatformGeocoder","description":"dev.jordond.compass.geocoder.web.mapBox","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/map-box.html","searchKeys":["mapBox","fun PlatformGeocoder.Companion.mapBox(apiKey: String, parameters: MapBoxParameters = MapBoxParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json)): MapBoxPlatformGeocoder","dev.jordond.compass.geocoder.web.mapBox"]},{"name":"fun boundingBox(minLongitude: Double, minLatitude: Double, maxLongitude: Double, maxLatitude: Double): MapBoxParametersBuilder","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.boundingBox","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters-builder/bounding-box.html","searchKeys":["boundingBox","fun boundingBox(minLongitude: Double, minLatitude: Double, maxLongitude: Double, maxLatitude: Double): MapBoxParametersBuilder","dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.boundingBox"]},{"name":"fun copy(minLongitude: Double = this.minLongitude, minLatitude: Double = this.minLatitude, maxLongitude: Double = this.maxLongitude, maxLatitude: Double = this.maxLatitude): MapBoxBoundingBox","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.copy","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-bounding-box/copy.html","searchKeys":["copy","fun copy(minLongitude: Double = this.minLongitude, minLatitude: Double = this.minLatitude, maxLongitude: Double = this.maxLongitude, maxLatitude: Double = this.maxLatitude): MapBoxBoundingBox","dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.copy"]},{"name":"fun mapBoxParameters(block: MapBoxParametersBuilder.() -> Unit): MapBoxParameters","description":"dev.jordond.compass.geocoder.web.parameter.mapBoxParameters","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/map-box-parameters.html","searchKeys":["mapBoxParameters","fun mapBoxParameters(block: MapBoxParametersBuilder.() -> Unit): MapBoxParameters","dev.jordond.compass.geocoder.web.parameter.mapBoxParameters"]},{"name":"fun valueOf(value: String): MapBoxTypes","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.valueOf","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MapBoxTypes","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.valueOf"]},{"name":"fun valueOf(value: String): WorldView","description":"dev.jordond.compass.geocoder.web.parameter.WorldView.valueOf","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-world-view/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): WorldView","dev.jordond.compass.geocoder.web.parameter.WorldView.valueOf"]},{"name":"fun values(): Array<MapBoxTypes>","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.values","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/values.html","searchKeys":["values","fun values(): Array<MapBoxTypes>","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.values"]},{"name":"fun values(): Array<WorldView>","description":"dev.jordond.compass.geocoder.web.parameter.WorldView.values","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-world-view/values.html","searchKeys":["values","fun values(): Array<WorldView>","dev.jordond.compass.geocoder.web.parameter.WorldView.values"]},{"name":"interface MapBoxPlatformGeocoder : HttpApiPlatformGeocoder","description":"dev.jordond.compass.geocoder.web.MapBoxPlatformGeocoder","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-platform-geocoder/index.html","searchKeys":["MapBoxPlatformGeocoder","interface MapBoxPlatformGeocoder : HttpApiPlatformGeocoder","dev.jordond.compass.geocoder.web.MapBoxPlatformGeocoder"]},{"name":"object Companion","description":"dev.jordond.compass.geocoder.web.MapBoxPlatformGeocoder.Companion","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-platform-geocoder/-companion/index.html","searchKeys":["Companion","object Companion","dev.jordond.compass.geocoder.web.MapBoxPlatformGeocoder.Companion"]},{"name":"open override fun build(): MapBoxParameters","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.build","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters-builder/build.html","searchKeys":["build","open override fun build(): MapBoxParameters","dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.build"]},{"name":"open override fun url(param: Coordinates): String","description":"dev.jordond.compass.geocoder.web.MapBoxReverseEndpoint.url","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-reverse-endpoint/url.html","searchKeys":["url","open override fun url(param: Coordinates): String","dev.jordond.compass.geocoder.web.MapBoxReverseEndpoint.url"]},{"name":"open override fun url(param: String): String","description":"dev.jordond.compass.geocoder.web.MapBoxForwardEndpoint.url","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-forward-endpoint/url.html","searchKeys":["url","open override fun url(param: String): String","dev.jordond.compass.geocoder.web.MapBoxForwardEndpoint.url"]},{"name":"open override val parameters: Map<String, String>","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.parameters","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters/parameters.html","searchKeys":["parameters","open override val parameters: Map<String, String>","dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.parameters"]},{"name":"open override val value: String","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.value","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-bounding-box/value.html","searchKeys":["value","open override val value: String","dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.value"]},{"name":"open override val value: String","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.value","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/value.html","searchKeys":["value","open override val value: String","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.value"]},{"name":"open override val value: String","description":"dev.jordond.compass.geocoder.web.parameter.WorldView.value","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-world-view/value.html","searchKeys":["value","open override val value: String","dev.jordond.compass.geocoder.web.parameter.WorldView.value"]},{"name":"open override val values: List<MapBoxTypes>","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypesList.values","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types-list/values.html","searchKeys":["values","open override val values: List<MapBoxTypes>","dev.jordond.compass.geocoder.web.parameter.MapBoxTypesList.values"]},{"name":"open suspend override fun mapResponse(response: HttpResponse): List<Coordinates>","description":"dev.jordond.compass.geocoder.web.MapBoxForwardEndpoint.mapResponse","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-forward-endpoint/map-response.html","searchKeys":["mapResponse","open suspend override fun mapResponse(response: HttpResponse): List<Coordinates>","dev.jordond.compass.geocoder.web.MapBoxForwardEndpoint.mapResponse"]},{"name":"open suspend override fun mapResponse(response: HttpResponse): List<Place>","description":"dev.jordond.compass.geocoder.web.MapBoxReverseEndpoint.mapResponse","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web/-map-box-reverse-endpoint/map-response.html","searchKeys":["mapResponse","open suspend override fun mapResponse(response: HttpResponse): List<Place>","dev.jordond.compass.geocoder.web.MapBoxReverseEndpoint.mapResponse"]},{"name":"val autocomplete: Boolean = true","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.autocomplete","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters/autocomplete.html","searchKeys":["autocomplete","val autocomplete: Boolean = true","dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.autocomplete"]},{"name":"val bbox: MapBoxBoundingBox? = null","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.bbox","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters/bbox.html","searchKeys":["bbox","val bbox: MapBoxBoundingBox? = null","dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.bbox"]},{"name":"val country: String? = null","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.country","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters/country.html","searchKeys":["country","val country: String? = null","dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.country"]},{"name":"val entries: EnumEntries<MapBoxTypes>","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.entries","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-types/entries.html","searchKeys":["entries","val entries: EnumEntries<MapBoxTypes>","dev.jordond.compass.geocoder.web.parameter.MapBoxTypes.entries"]},{"name":"val entries: EnumEntries<WorldView>","description":"dev.jordond.compass.geocoder.web.parameter.WorldView.entries","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-world-view/entries.html","searchKeys":["entries","val entries: EnumEntries<WorldView>","dev.jordond.compass.geocoder.web.parameter.WorldView.entries"]},{"name":"val language: String? = null","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.language","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters/language.html","searchKeys":["language","val language: String? = null","dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.language"]},{"name":"val limit: Int? = null","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.limit","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters/limit.html","searchKeys":["limit","val limit: Int? = null","dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.limit"]},{"name":"val maxLatitude: Double","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.maxLatitude","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-bounding-box/max-latitude.html","searchKeys":["maxLatitude","val maxLatitude: Double","dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.maxLatitude"]},{"name":"val maxLongitude: Double","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.maxLongitude","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-bounding-box/max-longitude.html","searchKeys":["maxLongitude","val maxLongitude: Double","dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.maxLongitude"]},{"name":"val minLatitude: Double","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.minLatitude","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-bounding-box/min-latitude.html","searchKeys":["minLatitude","val minLatitude: Double","dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.minLatitude"]},{"name":"val minLongitude: Double","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.minLongitude","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-bounding-box/min-longitude.html","searchKeys":["minLongitude","val minLongitude: Double","dev.jordond.compass.geocoder.web.parameter.MapBoxBoundingBox.minLongitude"]},{"name":"val permanent: Boolean = false","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.permanent","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters/permanent.html","searchKeys":["permanent","val permanent: Boolean = false","dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.permanent"]},{"name":"val proximity: String? = null","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.proximity","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters/proximity.html","searchKeys":["proximity","val proximity: String? = null","dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.proximity"]},{"name":"val types: MapBoxTypesList? = null","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.types","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters/types.html","searchKeys":["types","val types: MapBoxTypesList? = null","dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.types"]},{"name":"val worldView: WorldView? = null","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.worldView","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters/world-view.html","searchKeys":["worldView","val worldView: WorldView? = null","dev.jordond.compass.geocoder.web.parameter.MapBoxParameters.worldView"]},{"name":"var autocomplete: Boolean","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.autocomplete","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters-builder/autocomplete.html","searchKeys":["autocomplete","var autocomplete: Boolean","dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.autocomplete"]},{"name":"var bbox: MapBoxBoundingBox?","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.bbox","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters-builder/bbox.html","searchKeys":["bbox","var bbox: MapBoxBoundingBox?","dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.bbox"]},{"name":"var country: String?","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.country","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters-builder/country.html","searchKeys":["country","var country: String?","dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.country"]},{"name":"var language: String?","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.language","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters-builder/language.html","searchKeys":["language","var language: String?","dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.language"]},{"name":"var limit: Int","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.limit","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters-builder/limit.html","searchKeys":["limit","var limit: Int","dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.limit"]},{"name":"var permanent: Boolean","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.permanent","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters-builder/permanent.html","searchKeys":["permanent","var permanent: Boolean","dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.permanent"]},{"name":"var proximity: String?","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.proximity","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters-builder/proximity.html","searchKeys":["proximity","var proximity: String?","dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.proximity"]},{"name":"var types: MapBoxTypesList?","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.types","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters-builder/types.html","searchKeys":["types","var types: MapBoxTypesList?","dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.types"]},{"name":"var worldView: WorldView?","description":"dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.worldView","location":"compass-geocoder-web-mapbox/dev.jordond.compass.geocoder.web.parameter/-map-box-parameters-builder/world-view.html","searchKeys":["worldView","var worldView: WorldView?","dev.jordond.compass.geocoder.web.parameter.MapBoxParametersBuilder.worldView"]},{"name":"class GeolocationCoordinates","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-coordinates/index.html","searchKeys":["GeolocationCoordinates","class GeolocationCoordinates","dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates"]},{"name":"class GeolocationPosition","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationPosition","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-position/index.html","searchKeys":["GeolocationPosition","class GeolocationPosition","dev.jordond.compass.geolocation.browser.api.model.GeolocationPosition"]},{"name":"class GeolocationPositionError","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationPositionError","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-position-error/index.html","searchKeys":["GeolocationPositionError","class GeolocationPositionError","dev.jordond.compass.geolocation.browser.api.model.GeolocationPositionError"]},{"name":"constructor()","description":"dev.jordond.compass.geolocation.browser.api.Geolocation.Geolocation","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api/-geolocation/-geolocation.html","searchKeys":["Geolocation","constructor()","dev.jordond.compass.geolocation.browser.api.Geolocation.Geolocation"]},{"name":"constructor()","description":"dev.jordond.compass.geolocation.browser.api.Navigator.Navigator","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api/-navigator/-navigator.html","searchKeys":["Navigator","constructor()","dev.jordond.compass.geolocation.browser.api.Navigator.Navigator"]},{"name":"constructor()","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.GeolocationCoordinates","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-coordinates/-geolocation-coordinates.html","searchKeys":["GeolocationCoordinates","constructor()","dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.GeolocationCoordinates"]},{"name":"constructor()","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationPosition.GeolocationPosition","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-position/-geolocation-position.html","searchKeys":["GeolocationPosition","constructor()","dev.jordond.compass.geolocation.browser.api.model.GeolocationPosition.GeolocationPosition"]},{"name":"constructor()","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationPositionError.GeolocationPositionError","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-position-error/-geolocation-position-error.html","searchKeys":["GeolocationPositionError","constructor()","dev.jordond.compass.geolocation.browser.api.model.GeolocationPositionError.GeolocationPositionError"]},{"name":"expect class Geolocation","description":"dev.jordond.compass.geolocation.browser.api.Geolocation","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api/-geolocation/index.html","searchKeys":["Geolocation","expect class Geolocation","dev.jordond.compass.geolocation.browser.api.Geolocation"]},{"name":"expect class Navigator","description":"dev.jordond.compass.geolocation.browser.api.Navigator","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api/-navigator/index.html","searchKeys":["Navigator","expect class Navigator","dev.jordond.compass.geolocation.browser.api.Navigator"]},{"name":"expect fun clearWatch(watchId: Int)","description":"dev.jordond.compass.geolocation.browser.api.Geolocation.clearWatch","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api/-geolocation/clear-watch.html","searchKeys":["clearWatch","expect fun clearWatch(watchId: Int)","dev.jordond.compass.geolocation.browser.api.Geolocation.clearWatch"]},{"name":"expect fun createGeolocationOptions(enableHighAccuracy: Boolean, timeout: Double, maximumAge: Double): Object","description":"dev.jordond.compass.geolocation.browser.api.model.createGeolocationOptions","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/create-geolocation-options.html","searchKeys":["createGeolocationOptions","expect fun createGeolocationOptions(enableHighAccuracy: Boolean, timeout: Double, maximumAge: Double): Object","dev.jordond.compass.geolocation.browser.api.model.createGeolocationOptions"]},{"name":"expect fun getCurrentPosition(success: (GeolocationPosition?) -> Unit, error: (GeolocationPositionError) -> Unit, options: Object)","description":"dev.jordond.compass.geolocation.browser.api.Geolocation.getCurrentPosition","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api/-geolocation/get-current-position.html","searchKeys":["getCurrentPosition","expect fun getCurrentPosition(success: (GeolocationPosition?) -> Unit, error: (GeolocationPositionError) -> Unit, options: Object)","dev.jordond.compass.geolocation.browser.api.Geolocation.getCurrentPosition"]},{"name":"expect fun watchPosition(success: (GeolocationPosition?) -> Unit, error: (GeolocationPositionError) -> Unit, options: Object): Int","description":"dev.jordond.compass.geolocation.browser.api.Geolocation.watchPosition","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api/-geolocation/watch-position.html","searchKeys":["watchPosition","expect fun watchPosition(success: (GeolocationPosition?) -> Unit, error: (GeolocationPositionError) -> Unit, options: Object): Int","dev.jordond.compass.geolocation.browser.api.Geolocation.watchPosition"]},{"name":"expect interface Object","description":"dev.jordond.compass.geolocation.browser.internal.Object","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.internal/-object/index.html","searchKeys":["Object","expect interface Object","dev.jordond.compass.geolocation.browser.internal.Object"]},{"name":"expect val geolocation: Geolocation?","description":"dev.jordond.compass.geolocation.browser.api.Navigator.geolocation","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api/-navigator/geolocation.html","searchKeys":["geolocation","expect val geolocation: Geolocation?","dev.jordond.compass.geolocation.browser.api.Navigator.geolocation"]},{"name":"expect val navigator: Navigator?","description":"dev.jordond.compass.geolocation.browser.api.navigator","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api/navigator.html","searchKeys":["navigator","expect val navigator: Navigator?","dev.jordond.compass.geolocation.browser.api.navigator"]},{"name":"fun BrowserGeolocator(dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","description":"dev.jordond.compass.geolocation.browser.BrowserGeolocator","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser/-browser-geolocator.html","searchKeys":["BrowserGeolocator","fun BrowserGeolocator(dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","dev.jordond.compass.geolocation.browser.BrowserGeolocator"]},{"name":"fun Geolocator(dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","description":"dev.jordond.compass.geolocation.browser.Geolocator","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser/-geolocator.html","searchKeys":["Geolocator","fun Geolocator(dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","dev.jordond.compass.geolocation.browser.Geolocator"]},{"name":"fun Geolocator.Companion.browser(dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","description":"dev.jordond.compass.geolocation.browser.browser","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser/browser.html","searchKeys":["browser","fun Geolocator.Companion.browser(dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","dev.jordond.compass.geolocation.browser.browser"]},{"name":"fun Locator.Companion.browser(): BrowserLocator","description":"dev.jordond.compass.geolocation.browser.browser","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser/browser.html","searchKeys":["browser","fun Locator.Companion.browser(): BrowserLocator","dev.jordond.compass.geolocation.browser.browser"]},{"name":"fun createBrowserLocator(): BrowserLocator","description":"dev.jordond.compass.geolocation.browser.createBrowserLocator","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser/create-browser-locator.html","searchKeys":["createBrowserLocator","fun createBrowserLocator(): BrowserLocator","dev.jordond.compass.geolocation.browser.createBrowserLocator"]},{"name":"interface BrowserLocator : Locator","description":"dev.jordond.compass.geolocation.browser.BrowserLocator","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser/-browser-locator/index.html","searchKeys":["BrowserLocator","interface BrowserLocator : Locator","dev.jordond.compass.geolocation.browser.BrowserLocator"]},{"name":"val accuracy: Double","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.accuracy","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-coordinates/accuracy.html","searchKeys":["accuracy","val accuracy: Double","dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.accuracy"]},{"name":"val altitude: Double?","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.altitude","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-coordinates/altitude.html","searchKeys":["altitude","val altitude: Double?","dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.altitude"]},{"name":"val altitudeAccuracy: Double?","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.altitudeAccuracy","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-coordinates/altitude-accuracy.html","searchKeys":["altitudeAccuracy","val altitudeAccuracy: Double?","dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.altitudeAccuracy"]},{"name":"val coords: GeolocationCoordinates","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationPosition.coords","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-position/coords.html","searchKeys":["coords","val coords: GeolocationCoordinates","dev.jordond.compass.geolocation.browser.api.model.GeolocationPosition.coords"]},{"name":"val heading: Double?","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.heading","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-coordinates/heading.html","searchKeys":["heading","val heading: Double?","dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.heading"]},{"name":"val latitude: Double","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.latitude","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-coordinates/latitude.html","searchKeys":["latitude","val latitude: Double","dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.latitude"]},{"name":"val longitude: Double","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.longitude","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-coordinates/longitude.html","searchKeys":["longitude","val longitude: Double","dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.longitude"]},{"name":"val speed: Double?","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.speed","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-coordinates/speed.html","searchKeys":["speed","val speed: Double?","dev.jordond.compass.geolocation.browser.api.model.GeolocationCoordinates.speed"]},{"name":"val timestamp: Double","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationPosition.timestamp","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-position/timestamp.html","searchKeys":["timestamp","val timestamp: Double","dev.jordond.compass.geolocation.browser.api.model.GeolocationPosition.timestamp"]},{"name":"var code: Int","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationPositionError.code","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-position-error/code.html","searchKeys":["code","var code: Int","dev.jordond.compass.geolocation.browser.api.model.GeolocationPositionError.code"]},{"name":"var message: String","description":"dev.jordond.compass.geolocation.browser.api.model.GeolocationPositionError.message","location":"compass-geolocation-browser/dev.jordond.compass.geolocation.browser.api.model/-geolocation-position-error/message.html","searchKeys":["message","var message: String","dev.jordond.compass.geolocation.browser.api.model.GeolocationPositionError.message"]},{"name":"Balanced","description":"dev.jordond.compass.geolocation.Priority.Balanced","location":"compass-geolocation/dev.jordond.compass.geolocation/-priority/-balanced/index.html","searchKeys":["Balanced","Balanced","dev.jordond.compass.geolocation.Priority.Balanced"]},{"name":"Denied","description":"dev.jordond.compass.geolocation.PermissionState.Denied","location":"compass-geolocation/dev.jordond.compass.geolocation/-permission-state/-denied/index.html","searchKeys":["Denied","Denied","dev.jordond.compass.geolocation.PermissionState.Denied"]},{"name":"DeniedForever","description":"dev.jordond.compass.geolocation.PermissionState.DeniedForever","location":"compass-geolocation/dev.jordond.compass.geolocation/-permission-state/-denied-forever/index.html","searchKeys":["DeniedForever","DeniedForever","dev.jordond.compass.geolocation.PermissionState.DeniedForever"]},{"name":"Granted","description":"dev.jordond.compass.geolocation.PermissionState.Granted","location":"compass-geolocation/dev.jordond.compass.geolocation/-permission-state/-granted/index.html","searchKeys":["Granted","Granted","dev.jordond.compass.geolocation.PermissionState.Granted"]},{"name":"HighAccuracy","description":"dev.jordond.compass.geolocation.Priority.HighAccuracy","location":"compass-geolocation/dev.jordond.compass.geolocation/-priority/-high-accuracy/index.html","searchKeys":["HighAccuracy","HighAccuracy","dev.jordond.compass.geolocation.Priority.HighAccuracy"]},{"name":"LowPower","description":"dev.jordond.compass.geolocation.Priority.LowPower","location":"compass-geolocation/dev.jordond.compass.geolocation/-priority/-low-power/index.html","searchKeys":["LowPower","LowPower","dev.jordond.compass.geolocation.Priority.LowPower"]},{"name":"NotDetermined","description":"dev.jordond.compass.geolocation.PermissionState.NotDetermined","location":"compass-geolocation/dev.jordond.compass.geolocation/-permission-state/-not-determined/index.html","searchKeys":["NotDetermined","NotDetermined","dev.jordond.compass.geolocation.PermissionState.NotDetermined"]},{"name":"Passive","description":"dev.jordond.compass.geolocation.Priority.Passive","location":"compass-geolocation/dev.jordond.compass.geolocation/-priority/-passive/index.html","searchKeys":["Passive","Passive","dev.jordond.compass.geolocation.Priority.Passive"]},{"name":"abstract fun hasPermission(): Boolean","description":"dev.jordond.compass.geolocation.PermissionLocator.hasPermission","location":"compass-geolocation/dev.jordond.compass.geolocation/-permission-locator/has-permission.html","searchKeys":["hasPermission","abstract fun hasPermission(): Boolean","dev.jordond.compass.geolocation.PermissionLocator.hasPermission"]},{"name":"abstract fun isAvailable(): Boolean","description":"dev.jordond.compass.geolocation.Locator.isAvailable","location":"compass-geolocation/dev.jordond.compass.geolocation/-locator/is-available.html","searchKeys":["isAvailable","abstract fun isAvailable(): Boolean","dev.jordond.compass.geolocation.Locator.isAvailable"]},{"name":"abstract fun stopTracking()","description":"dev.jordond.compass.geolocation.Geolocator.stopTracking","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator/stop-tracking.html","searchKeys":["stopTracking","abstract fun stopTracking()","dev.jordond.compass.geolocation.Geolocator.stopTracking"]},{"name":"abstract fun stopTracking()","description":"dev.jordond.compass.geolocation.Locator.stopTracking","location":"compass-geolocation/dev.jordond.compass.geolocation/-locator/stop-tracking.html","searchKeys":["stopTracking","abstract fun stopTracking()","dev.jordond.compass.geolocation.Locator.stopTracking"]},{"name":"abstract fun track(request: LocationRequest = LocationRequest()): Flow<TrackingStatus>","description":"dev.jordond.compass.geolocation.Geolocator.track","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator/track.html","searchKeys":["track","abstract fun track(request: LocationRequest = LocationRequest()): Flow<TrackingStatus>","dev.jordond.compass.geolocation.Geolocator.track"]},{"name":"abstract suspend fun current(priority: Priority = Priority.Balanced): GeolocatorResult","description":"dev.jordond.compass.geolocation.Geolocator.current","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator/current.html","searchKeys":["current","abstract suspend fun current(priority: Priority = Priority.Balanced): GeolocatorResult","dev.jordond.compass.geolocation.Geolocator.current"]},{"name":"abstract suspend fun current(priority: Priority = Priority.Balanced): Location","description":"dev.jordond.compass.geolocation.Locator.current","location":"compass-geolocation/dev.jordond.compass.geolocation/-locator/current.html","searchKeys":["current","abstract suspend fun current(priority: Priority = Priority.Balanced): Location","dev.jordond.compass.geolocation.Locator.current"]},{"name":"abstract suspend fun isAvailable(): Boolean","description":"dev.jordond.compass.geolocation.Geolocator.isAvailable","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator/is-available.html","searchKeys":["isAvailable","abstract suspend fun isAvailable(): Boolean","dev.jordond.compass.geolocation.Geolocator.isAvailable"]},{"name":"abstract suspend fun track(request: LocationRequest = LocationRequest()): Flow<Location>","description":"dev.jordond.compass.geolocation.Locator.track","location":"compass-geolocation/dev.jordond.compass.geolocation/-locator/track.html","searchKeys":["track","abstract suspend fun track(request: LocationRequest = LocationRequest()): Flow<Location>","dev.jordond.compass.geolocation.Locator.track"]},{"name":"abstract val locationUpdates: Flow<Location>","description":"dev.jordond.compass.geolocation.Locator.locationUpdates","location":"compass-geolocation/dev.jordond.compass.geolocation/-locator/location-updates.html","searchKeys":["locationUpdates","abstract val locationUpdates: Flow<Location>","dev.jordond.compass.geolocation.Locator.locationUpdates"]},{"name":"abstract val message: String","description":"dev.jordond.compass.geolocation.GeolocatorResult.Error.message","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-error/message.html","searchKeys":["message","abstract val message: String","dev.jordond.compass.geolocation.GeolocatorResult.Error.message"]},{"name":"abstract val trackingStatus: Flow<TrackingStatus>","description":"dev.jordond.compass.geolocation.Geolocator.trackingStatus","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator/tracking-status.html","searchKeys":["trackingStatus","abstract val trackingStatus: Flow<TrackingStatus>","dev.jordond.compass.geolocation.Geolocator.trackingStatus"]},{"name":"class Error(val cause: GeolocatorResult.Error) : TrackingStatus","description":"dev.jordond.compass.geolocation.TrackingStatus.Error","location":"compass-geolocation/dev.jordond.compass.geolocation/-tracking-status/-error/index.html","searchKeys":["Error","class Error(val cause: GeolocatorResult.Error) : TrackingStatus","dev.jordond.compass.geolocation.TrackingStatus.Error"]},{"name":"class GeolocationException(message: String?) : Throwable","description":"dev.jordond.compass.geolocation.exception.GeolocationException","location":"compass-geolocation/dev.jordond.compass.geolocation.exception/-geolocation-exception/index.html","searchKeys":["GeolocationException","class GeolocationException(message: String?) : Throwable","dev.jordond.compass.geolocation.exception.GeolocationException"]},{"name":"class GeolocationFailed(val message: String) : GeolocatorResult.Error","description":"dev.jordond.compass.geolocation.GeolocatorResult.GeolocationFailed","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-geolocation-failed/index.html","searchKeys":["GeolocationFailed","class GeolocationFailed(val message: String) : GeolocatorResult.Error","dev.jordond.compass.geolocation.GeolocatorResult.GeolocationFailed"]},{"name":"class LocationRequest(val priority: Priority = Priority.Balanced, val interval: Long = 5000, val maximumAge: Long = 0)","description":"dev.jordond.compass.geolocation.LocationRequest","location":"compass-geolocation/dev.jordond.compass.geolocation/-location-request/index.html","searchKeys":["LocationRequest","class LocationRequest(val priority: Priority = Priority.Balanced, val interval: Long = 5000, val maximumAge: Long = 0)","dev.jordond.compass.geolocation.LocationRequest"]},{"name":"class PermissionDenied(val forever: Boolean) : GeolocatorResult.Error","description":"dev.jordond.compass.geolocation.GeolocatorResult.PermissionDenied","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-permission-denied/index.html","searchKeys":["PermissionDenied","class PermissionDenied(val forever: Boolean) : GeolocatorResult.Error","dev.jordond.compass.geolocation.GeolocatorResult.PermissionDenied"]},{"name":"class PermissionDeniedException(permission: String = \"Location\") : PermissionException","description":"dev.jordond.compass.geolocation.exception.PermissionDeniedException","location":"compass-geolocation/dev.jordond.compass.geolocation.exception/-permission-denied-exception/index.html","searchKeys":["PermissionDeniedException","class PermissionDeniedException(permission: String = \"Location\") : PermissionException","dev.jordond.compass.geolocation.exception.PermissionDeniedException"]},{"name":"class PermissionDeniedForeverException(permission: String = \"Location\") : PermissionException","description":"dev.jordond.compass.geolocation.exception.PermissionDeniedForeverException","location":"compass-geolocation/dev.jordond.compass.geolocation.exception/-permission-denied-forever-exception/index.html","searchKeys":["PermissionDeniedForeverException","class PermissionDeniedForeverException(permission: String = \"Location\") : PermissionException","dev.jordond.compass.geolocation.exception.PermissionDeniedForeverException"]},{"name":"class PermissionError(val cause: PermissionException) : GeolocatorResult.Error","description":"dev.jordond.compass.geolocation.GeolocatorResult.PermissionError","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-permission-error/index.html","searchKeys":["PermissionError","class PermissionError(val cause: PermissionException) : GeolocatorResult.Error","dev.jordond.compass.geolocation.GeolocatorResult.PermissionError"]},{"name":"class PermissionMissingException(permission: String) : PermissionException","description":"dev.jordond.compass.geolocation.exception.PermissionMissingException","location":"compass-geolocation/dev.jordond.compass.geolocation.exception/-permission-missing-exception/index.html","searchKeys":["PermissionMissingException","class PermissionMissingException(permission: String) : PermissionException","dev.jordond.compass.geolocation.exception.PermissionMissingException"]},{"name":"class PermissionRequestException(message: String, permission: String = \"Location\") : PermissionException","description":"dev.jordond.compass.geolocation.exception.PermissionRequestException","location":"compass-geolocation/dev.jordond.compass.geolocation.exception/-permission-request-exception/index.html","searchKeys":["PermissionRequestException","class PermissionRequestException(message: String, permission: String = \"Location\") : PermissionException","dev.jordond.compass.geolocation.exception.PermissionRequestException"]},{"name":"class Success(val data: Location) : GeolocatorResult","description":"dev.jordond.compass.geolocation.GeolocatorResult.Success","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-success/index.html","searchKeys":["Success","class Success(val data: Location) : GeolocatorResult","dev.jordond.compass.geolocation.GeolocatorResult.Success"]},{"name":"class Update(val location: Location) : TrackingStatus","description":"dev.jordond.compass.geolocation.TrackingStatus.Update","location":"compass-geolocation/dev.jordond.compass.geolocation/-tracking-status/-update/index.html","searchKeys":["Update","class Update(val location: Location) : TrackingStatus","dev.jordond.compass.geolocation.TrackingStatus.Update"]},{"name":"constructor(cause: GeolocatorResult.Error)","description":"dev.jordond.compass.geolocation.TrackingStatus.Error.Error","location":"compass-geolocation/dev.jordond.compass.geolocation/-tracking-status/-error/-error.html","searchKeys":["Error","constructor(cause: GeolocatorResult.Error)","dev.jordond.compass.geolocation.TrackingStatus.Error.Error"]},{"name":"constructor(cause: PermissionException)","description":"dev.jordond.compass.geolocation.GeolocatorResult.PermissionError.PermissionError","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-permission-error/-permission-error.html","searchKeys":["PermissionError","constructor(cause: PermissionException)","dev.jordond.compass.geolocation.GeolocatorResult.PermissionError.PermissionError"]},{"name":"constructor(data: Location)","description":"dev.jordond.compass.geolocation.GeolocatorResult.Success.Success","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-success/-success.html","searchKeys":["Success","constructor(data: Location)","dev.jordond.compass.geolocation.GeolocatorResult.Success.Success"]},{"name":"constructor(forever: Boolean)","description":"dev.jordond.compass.geolocation.GeolocatorResult.PermissionDenied.PermissionDenied","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-permission-denied/-permission-denied.html","searchKeys":["PermissionDenied","constructor(forever: Boolean)","dev.jordond.compass.geolocation.GeolocatorResult.PermissionDenied.PermissionDenied"]},{"name":"constructor(location: Location)","description":"dev.jordond.compass.geolocation.TrackingStatus.Update.Update","location":"compass-geolocation/dev.jordond.compass.geolocation/-tracking-status/-update/-update.html","searchKeys":["Update","constructor(location: Location)","dev.jordond.compass.geolocation.TrackingStatus.Update.Update"]},{"name":"constructor(message: String)","description":"dev.jordond.compass.geolocation.GeolocatorResult.GeolocationFailed.GeolocationFailed","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-geolocation-failed/-geolocation-failed.html","searchKeys":["GeolocationFailed","constructor(message: String)","dev.jordond.compass.geolocation.GeolocatorResult.GeolocationFailed.GeolocationFailed"]},{"name":"constructor(message: String, permission: String = \"Location\")","description":"dev.jordond.compass.geolocation.exception.PermissionRequestException.PermissionRequestException","location":"compass-geolocation/dev.jordond.compass.geolocation.exception/-permission-request-exception/-permission-request-exception.html","searchKeys":["PermissionRequestException","constructor(message: String, permission: String = \"Location\")","dev.jordond.compass.geolocation.exception.PermissionRequestException.PermissionRequestException"]},{"name":"constructor(message: String?)","description":"dev.jordond.compass.geolocation.exception.GeolocationException.GeolocationException","location":"compass-geolocation/dev.jordond.compass.geolocation.exception/-geolocation-exception/-geolocation-exception.html","searchKeys":["GeolocationException","constructor(message: String?)","dev.jordond.compass.geolocation.exception.GeolocationException.GeolocationException"]},{"name":"constructor(permission: String = \"Location\")","description":"dev.jordond.compass.geolocation.exception.PermissionDeniedException.PermissionDeniedException","location":"compass-geolocation/dev.jordond.compass.geolocation.exception/-permission-denied-exception/-permission-denied-exception.html","searchKeys":["PermissionDeniedException","constructor(permission: String = \"Location\")","dev.jordond.compass.geolocation.exception.PermissionDeniedException.PermissionDeniedException"]},{"name":"constructor(permission: String = \"Location\")","description":"dev.jordond.compass.geolocation.exception.PermissionDeniedForeverException.PermissionDeniedForeverException","location":"compass-geolocation/dev.jordond.compass.geolocation.exception/-permission-denied-forever-exception/-permission-denied-forever-exception.html","searchKeys":["PermissionDeniedForeverException","constructor(permission: String = \"Location\")","dev.jordond.compass.geolocation.exception.PermissionDeniedForeverException.PermissionDeniedForeverException"]},{"name":"constructor(permission: String)","description":"dev.jordond.compass.geolocation.exception.PermissionMissingException.PermissionMissingException","location":"compass-geolocation/dev.jordond.compass.geolocation.exception/-permission-missing-exception/-permission-missing-exception.html","searchKeys":["PermissionMissingException","constructor(permission: String)","dev.jordond.compass.geolocation.exception.PermissionMissingException.PermissionMissingException"]},{"name":"constructor(priority: Priority = Priority.Balanced, interval: Long = 5000, maximumAge: Long = 0)","description":"dev.jordond.compass.geolocation.LocationRequest.LocationRequest","location":"compass-geolocation/dev.jordond.compass.geolocation/-location-request/-location-request.html","searchKeys":["LocationRequest","constructor(priority: Priority = Priority.Balanced, interval: Long = 5000, maximumAge: Long = 0)","dev.jordond.compass.geolocation.LocationRequest.LocationRequest"]},{"name":"data object Idle : TrackingStatus","description":"dev.jordond.compass.geolocation.TrackingStatus.Idle","location":"compass-geolocation/dev.jordond.compass.geolocation/-tracking-status/-idle/index.html","searchKeys":["Idle","data object Idle : TrackingStatus","dev.jordond.compass.geolocation.TrackingStatus.Idle"]},{"name":"data object Tracking : TrackingStatus","description":"dev.jordond.compass.geolocation.TrackingStatus.Tracking","location":"compass-geolocation/dev.jordond.compass.geolocation/-tracking-status/-tracking/index.html","searchKeys":["Tracking","data object Tracking : TrackingStatus","dev.jordond.compass.geolocation.TrackingStatus.Tracking"]},{"name":"enum PermissionState : Enum<PermissionState> ","description":"dev.jordond.compass.geolocation.PermissionState","location":"compass-geolocation/dev.jordond.compass.geolocation/-permission-state/index.html","searchKeys":["PermissionState","enum PermissionState : Enum<PermissionState> ","dev.jordond.compass.geolocation.PermissionState"]},{"name":"enum Priority : Enum<Priority> ","description":"dev.jordond.compass.geolocation.Priority","location":"compass-geolocation/dev.jordond.compass.geolocation/-priority/index.html","searchKeys":["Priority","enum Priority : Enum<Priority> ","dev.jordond.compass.geolocation.Priority"]},{"name":"fun Geolocator(locator: Locator, dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","description":"dev.jordond.compass.geolocation.Geolocator","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator.html","searchKeys":["Geolocator","fun Geolocator(locator: Locator, dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","dev.jordond.compass.geolocation.Geolocator"]},{"name":"fun Geolocator.hasPermission(): Boolean","description":"dev.jordond.compass.geolocation.hasPermission","location":"compass-geolocation/dev.jordond.compass.geolocation/has-permission.html","searchKeys":["hasPermission","fun Geolocator.hasPermission(): Boolean","dev.jordond.compass.geolocation.hasPermission"]},{"name":"fun GeolocatorResult.Error.isPermissionDenied(): Boolean","description":"dev.jordond.compass.geolocation.isPermissionDenied","location":"compass-geolocation/dev.jordond.compass.geolocation/is-permission-denied.html","searchKeys":["isPermissionDenied","fun GeolocatorResult.Error.isPermissionDenied(): Boolean","dev.jordond.compass.geolocation.isPermissionDenied"]},{"name":"fun GeolocatorResult.Error.isPermissionDeniedForever(): Boolean","description":"dev.jordond.compass.geolocation.isPermissionDeniedForever","location":"compass-geolocation/dev.jordond.compass.geolocation/is-permission-denied-forever.html","searchKeys":["isPermissionDeniedForever","fun GeolocatorResult.Error.isPermissionDeniedForever(): Boolean","dev.jordond.compass.geolocation.isPermissionDeniedForever"]},{"name":"fun valueOf(value: String): PermissionState","description":"dev.jordond.compass.geolocation.PermissionState.valueOf","location":"compass-geolocation/dev.jordond.compass.geolocation/-permission-state/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PermissionState","dev.jordond.compass.geolocation.PermissionState.valueOf"]},{"name":"fun valueOf(value: String): Priority","description":"dev.jordond.compass.geolocation.Priority.valueOf","location":"compass-geolocation/dev.jordond.compass.geolocation/-priority/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Priority","dev.jordond.compass.geolocation.Priority.valueOf"]},{"name":"fun values(): Array<PermissionState>","description":"dev.jordond.compass.geolocation.PermissionState.values","location":"compass-geolocation/dev.jordond.compass.geolocation/-permission-state/values.html","searchKeys":["values","fun values(): Array<PermissionState>","dev.jordond.compass.geolocation.PermissionState.values"]},{"name":"fun values(): Array<Priority>","description":"dev.jordond.compass.geolocation.Priority.values","location":"compass-geolocation/dev.jordond.compass.geolocation/-priority/values.html","searchKeys":["values","fun values(): Array<Priority>","dev.jordond.compass.geolocation.Priority.values"]},{"name":"interface Error : GeolocatorResult","description":"dev.jordond.compass.geolocation.GeolocatorResult.Error","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-error/index.html","searchKeys":["Error","interface Error : GeolocatorResult","dev.jordond.compass.geolocation.GeolocatorResult.Error"]},{"name":"interface Geolocator","description":"dev.jordond.compass.geolocation.Geolocator","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator/index.html","searchKeys":["Geolocator","interface Geolocator","dev.jordond.compass.geolocation.Geolocator"]},{"name":"interface Locator","description":"dev.jordond.compass.geolocation.Locator","location":"compass-geolocation/dev.jordond.compass.geolocation/-locator/index.html","searchKeys":["Locator","interface Locator","dev.jordond.compass.geolocation.Locator"]},{"name":"interface PermissionLocator : Locator","description":"dev.jordond.compass.geolocation.PermissionLocator","location":"compass-geolocation/dev.jordond.compass.geolocation/-permission-locator/index.html","searchKeys":["PermissionLocator","interface PermissionLocator : Locator","dev.jordond.compass.geolocation.PermissionLocator"]},{"name":"object Companion","description":"dev.jordond.compass.geolocation.Geolocator.Companion","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator/-companion/index.html","searchKeys":["Companion","object Companion","dev.jordond.compass.geolocation.Geolocator.Companion"]},{"name":"object Companion","description":"dev.jordond.compass.geolocation.Locator.Companion","location":"compass-geolocation/dev.jordond.compass.geolocation/-locator/-companion/index.html","searchKeys":["Companion","object Companion","dev.jordond.compass.geolocation.Locator.Companion"]},{"name":"object NotFound : GeolocatorResult.Error","description":"dev.jordond.compass.geolocation.GeolocatorResult.NotFound","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-not-found/index.html","searchKeys":["NotFound","object NotFound : GeolocatorResult.Error","dev.jordond.compass.geolocation.GeolocatorResult.NotFound"]},{"name":"object NotSupported : GeolocatorResult.Error","description":"dev.jordond.compass.geolocation.GeolocatorResult.NotSupported","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-not-supported/index.html","searchKeys":["NotSupported","object NotSupported : GeolocatorResult.Error","dev.jordond.compass.geolocation.GeolocatorResult.NotSupported"]},{"name":"object NotSupportedLocator : Locator","description":"dev.jordond.compass.geolocation.NotSupportedLocator","location":"compass-geolocation/dev.jordond.compass.geolocation/-not-supported-locator/index.html","searchKeys":["NotSupportedLocator","object NotSupportedLocator : Locator","dev.jordond.compass.geolocation.NotSupportedLocator"]},{"name":"open fun errorOrNull(): GeolocatorResult.Error?","description":"dev.jordond.compass.geolocation.GeolocatorResult.errorOrNull","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/error-or-null.html","searchKeys":["errorOrNull","open fun errorOrNull(): GeolocatorResult.Error?","dev.jordond.compass.geolocation.GeolocatorResult.errorOrNull"]},{"name":"open fun getOrNull(): Location?","description":"dev.jordond.compass.geolocation.GeolocatorResult.getOrNull","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/get-or-null.html","searchKeys":["getOrNull","open fun getOrNull(): Location?","dev.jordond.compass.geolocation.GeolocatorResult.getOrNull"]},{"name":"open fun onFailed(block: (GeolocatorResult.Error) -> Unit): GeolocatorResult","description":"dev.jordond.compass.geolocation.GeolocatorResult.onFailed","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/on-failed.html","searchKeys":["onFailed","open fun onFailed(block: (GeolocatorResult.Error) -> Unit): GeolocatorResult","dev.jordond.compass.geolocation.GeolocatorResult.onFailed"]},{"name":"open fun onSuccess(block: (Location) -> Unit): GeolocatorResult","description":"dev.jordond.compass.geolocation.GeolocatorResult.onSuccess","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/on-success.html","searchKeys":["onSuccess","open fun onSuccess(block: (Location) -> Unit): GeolocatorResult","dev.jordond.compass.geolocation.GeolocatorResult.onSuccess"]},{"name":"open override fun isAvailable(): Boolean","description":"dev.jordond.compass.geolocation.NotSupportedLocator.isAvailable","location":"compass-geolocation/dev.jordond.compass.geolocation/-not-supported-locator/is-available.html","searchKeys":["isAvailable","open override fun isAvailable(): Boolean","dev.jordond.compass.geolocation.NotSupportedLocator.isAvailable"]},{"name":"open override fun stopTracking()","description":"dev.jordond.compass.geolocation.NotSupportedLocator.stopTracking","location":"compass-geolocation/dev.jordond.compass.geolocation/-not-supported-locator/stop-tracking.html","searchKeys":["stopTracking","open override fun stopTracking()","dev.jordond.compass.geolocation.NotSupportedLocator.stopTracking"]},{"name":"open override val locationUpdates: Flow<Location>","description":"dev.jordond.compass.geolocation.NotSupportedLocator.locationUpdates","location":"compass-geolocation/dev.jordond.compass.geolocation/-not-supported-locator/location-updates.html","searchKeys":["locationUpdates","open override val locationUpdates: Flow<Location>","dev.jordond.compass.geolocation.NotSupportedLocator.locationUpdates"]},{"name":"open override val message: String","description":"dev.jordond.compass.geolocation.GeolocatorResult.GeolocationFailed.message","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-geolocation-failed/message.html","searchKeys":["message","open override val message: String","dev.jordond.compass.geolocation.GeolocatorResult.GeolocationFailed.message"]},{"name":"open override val message: String","description":"dev.jordond.compass.geolocation.GeolocatorResult.NotFound.message","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-not-found/message.html","searchKeys":["message","open override val message: String","dev.jordond.compass.geolocation.GeolocatorResult.NotFound.message"]},{"name":"open override val message: String","description":"dev.jordond.compass.geolocation.GeolocatorResult.NotSupported.message","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-not-supported/message.html","searchKeys":["message","open override val message: String","dev.jordond.compass.geolocation.GeolocatorResult.NotSupported.message"]},{"name":"open override val message: String","description":"dev.jordond.compass.geolocation.GeolocatorResult.PermissionDenied.message","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-permission-denied/message.html","searchKeys":["message","open override val message: String","dev.jordond.compass.geolocation.GeolocatorResult.PermissionDenied.message"]},{"name":"open override val message: String","description":"dev.jordond.compass.geolocation.GeolocatorResult.PermissionError.message","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-permission-error/message.html","searchKeys":["message","open override val message: String","dev.jordond.compass.geolocation.GeolocatorResult.PermissionError.message"]},{"name":"open suspend fun startTracking(request: LocationRequest = LocationRequest()): TrackingStatus","description":"dev.jordond.compass.geolocation.Geolocator.startTracking","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator/start-tracking.html","searchKeys":["startTracking","open suspend fun startTracking(request: LocationRequest = LocationRequest()): TrackingStatus","dev.jordond.compass.geolocation.Geolocator.startTracking"]},{"name":"open suspend override fun current(priority: Priority): Location","description":"dev.jordond.compass.geolocation.NotSupportedLocator.current","location":"compass-geolocation/dev.jordond.compass.geolocation/-not-supported-locator/current.html","searchKeys":["current","open suspend override fun current(priority: Priority): Location","dev.jordond.compass.geolocation.NotSupportedLocator.current"]},{"name":"open suspend override fun track(request: LocationRequest): Flow<Location>","description":"dev.jordond.compass.geolocation.NotSupportedLocator.track","location":"compass-geolocation/dev.jordond.compass.geolocation/-not-supported-locator/track.html","searchKeys":["track","open suspend override fun track(request: LocationRequest): Flow<Location>","dev.jordond.compass.geolocation.NotSupportedLocator.track"]},{"name":"open val isActive: Boolean","description":"dev.jordond.compass.geolocation.TrackingStatus.isActive","location":"compass-geolocation/dev.jordond.compass.geolocation/-tracking-status/is-active.html","searchKeys":["isActive","open val isActive: Boolean","dev.jordond.compass.geolocation.TrackingStatus.isActive"]},{"name":"open val isError: Boolean","description":"dev.jordond.compass.geolocation.GeolocatorResult.isError","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/is-error.html","searchKeys":["isError","open val isError: Boolean","dev.jordond.compass.geolocation.GeolocatorResult.isError"]},{"name":"open val locationUpdates: Flow<Location>","description":"dev.jordond.compass.geolocation.Geolocator.locationUpdates","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator/location-updates.html","searchKeys":["locationUpdates","open val locationUpdates: Flow<Location>","dev.jordond.compass.geolocation.Geolocator.locationUpdates"]},{"name":"sealed class PermissionException : Throwable","description":"dev.jordond.compass.geolocation.exception.PermissionException","location":"compass-geolocation/dev.jordond.compass.geolocation.exception/-permission-exception/index.html","searchKeys":["PermissionException","sealed class PermissionException : Throwable","dev.jordond.compass.geolocation.exception.PermissionException"]},{"name":"sealed interface GeolocatorResult","description":"dev.jordond.compass.geolocation.GeolocatorResult","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/index.html","searchKeys":["GeolocatorResult","sealed interface GeolocatorResult","dev.jordond.compass.geolocation.GeolocatorResult"]},{"name":"sealed interface TrackingStatus","description":"dev.jordond.compass.geolocation.TrackingStatus","location":"compass-geolocation/dev.jordond.compass.geolocation/-tracking-status/index.html","searchKeys":["TrackingStatus","sealed interface TrackingStatus","dev.jordond.compass.geolocation.TrackingStatus"]},{"name":"suspend fun Geolocator.currentLocationOrNull(): Location?","description":"dev.jordond.compass.geolocation.currentLocationOrNull","location":"compass-geolocation/dev.jordond.compass.geolocation/current-location-or-null.html","searchKeys":["currentLocationOrNull","suspend fun Geolocator.currentLocationOrNull(): Location?","dev.jordond.compass.geolocation.currentLocationOrNull"]},{"name":"val cause: GeolocatorResult.Error","description":"dev.jordond.compass.geolocation.TrackingStatus.Error.cause","location":"compass-geolocation/dev.jordond.compass.geolocation/-tracking-status/-error/cause.html","searchKeys":["cause","val cause: GeolocatorResult.Error","dev.jordond.compass.geolocation.TrackingStatus.Error.cause"]},{"name":"val cause: PermissionException","description":"dev.jordond.compass.geolocation.GeolocatorResult.PermissionError.cause","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-permission-error/cause.html","searchKeys":["cause","val cause: PermissionException","dev.jordond.compass.geolocation.GeolocatorResult.PermissionError.cause"]},{"name":"val data: Location","description":"dev.jordond.compass.geolocation.GeolocatorResult.Success.data","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-success/data.html","searchKeys":["data","val data: Location","dev.jordond.compass.geolocation.GeolocatorResult.Success.data"]},{"name":"val entries: EnumEntries<PermissionState>","description":"dev.jordond.compass.geolocation.PermissionState.entries","location":"compass-geolocation/dev.jordond.compass.geolocation/-permission-state/entries.html","searchKeys":["entries","val entries: EnumEntries<PermissionState>","dev.jordond.compass.geolocation.PermissionState.entries"]},{"name":"val entries: EnumEntries<Priority>","description":"dev.jordond.compass.geolocation.Priority.entries","location":"compass-geolocation/dev.jordond.compass.geolocation/-priority/entries.html","searchKeys":["entries","val entries: EnumEntries<Priority>","dev.jordond.compass.geolocation.Priority.entries"]},{"name":"val forever: Boolean","description":"dev.jordond.compass.geolocation.GeolocatorResult.PermissionDenied.forever","location":"compass-geolocation/dev.jordond.compass.geolocation/-geolocator-result/-permission-denied/forever.html","searchKeys":["forever","val forever: Boolean","dev.jordond.compass.geolocation.GeolocatorResult.PermissionDenied.forever"]},{"name":"val interval: Long = 5000","description":"dev.jordond.compass.geolocation.LocationRequest.interval","location":"compass-geolocation/dev.jordond.compass.geolocation/-location-request/interval.html","searchKeys":["interval","val interval: Long = 5000","dev.jordond.compass.geolocation.LocationRequest.interval"]},{"name":"val location: Location","description":"dev.jordond.compass.geolocation.TrackingStatus.Update.location","location":"compass-geolocation/dev.jordond.compass.geolocation/-tracking-status/-update/location.html","searchKeys":["location","val location: Location","dev.jordond.compass.geolocation.TrackingStatus.Update.location"]},{"name":"val maximumAge: Long = 0","description":"dev.jordond.compass.geolocation.LocationRequest.maximumAge","location":"compass-geolocation/dev.jordond.compass.geolocation/-location-request/maximum-age.html","searchKeys":["maximumAge","val maximumAge: Long = 0","dev.jordond.compass.geolocation.LocationRequest.maximumAge"]},{"name":"val priority: Priority","description":"dev.jordond.compass.geolocation.LocationRequest.priority","location":"compass-geolocation/dev.jordond.compass.geolocation/-location-request/priority.html","searchKeys":["priority","val priority: Priority","dev.jordond.compass.geolocation.LocationRequest.priority"]},{"name":"abstract fun build(): T","description":"dev.jordond.compass.geocoder.web.parameter.QueryParametersBuilder.build","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web.parameter/-query-parameters-builder/build.html","searchKeys":["build","abstract fun build(): T","dev.jordond.compass.geocoder.web.parameter.QueryParametersBuilder.build"]},{"name":"abstract fun url(param: Params): String","description":"dev.jordond.compass.geocoder.web.HttpApiEndpoint.url","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-http-api-endpoint/url.html","searchKeys":["url","abstract fun url(param: Params): String","dev.jordond.compass.geocoder.web.HttpApiEndpoint.url"]},{"name":"abstract suspend fun mapResponse(response: HttpResponse): Result","description":"dev.jordond.compass.geocoder.web.HttpApiEndpoint.mapResponse","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-http-api-endpoint/map-response.html","searchKeys":["mapResponse","abstract suspend fun mapResponse(response: HttpResponse): Result","dev.jordond.compass.geocoder.web.HttpApiEndpoint.mapResponse"]},{"name":"abstract val parameters: Map<String, String>","description":"dev.jordond.compass.geocoder.web.parameter.QueryParameters.parameters","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web.parameter/-query-parameters/parameters.html","searchKeys":["parameters","abstract val parameters: Map<String, String>","dev.jordond.compass.geocoder.web.parameter.QueryParameters.parameters"]},{"name":"abstract val value: String","description":"dev.jordond.compass.geocoder.web.parameter.QueryParamValue.value","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web.parameter/-query-param-value/value.html","searchKeys":["value","abstract val value: String","dev.jordond.compass.geocoder.web.parameter.QueryParamValue.value"]},{"name":"abstract val values: List<T>","description":"dev.jordond.compass.geocoder.web.parameter.QueryParamListValue.values","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web.parameter/-query-param-list-value/values.html","searchKeys":["values","abstract val values: List<T>","dev.jordond.compass.geocoder.web.parameter.QueryParamListValue.values"]},{"name":"class ForwardHttpApiPlatformGeocoder(endpoint: ForwardEndpoint, client: HttpClient) : HttpApiPlatformGeocoder","description":"dev.jordond.compass.geocoder.web.ForwardHttpApiPlatformGeocoder","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-forward-http-api-platform-geocoder/index.html","searchKeys":["ForwardHttpApiPlatformGeocoder","class ForwardHttpApiPlatformGeocoder(endpoint: ForwardEndpoint, client: HttpClient) : HttpApiPlatformGeocoder","dev.jordond.compass.geocoder.web.ForwardHttpApiPlatformGeocoder"]},{"name":"class ReverseHttpApiPlatformGeocoder(endpoint: ReverseEndpoint, client: HttpClient) : HttpApiPlatformGeocoder","description":"dev.jordond.compass.geocoder.web.ReverseHttpApiPlatformGeocoder","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-reverse-http-api-platform-geocoder/index.html","searchKeys":["ReverseHttpApiPlatformGeocoder","class ReverseHttpApiPlatformGeocoder(endpoint: ReverseEndpoint, client: HttpClient) : HttpApiPlatformGeocoder","dev.jordond.compass.geocoder.web.ReverseHttpApiPlatformGeocoder"]},{"name":"constructor(endpoint: ForwardEndpoint, client: HttpClient)","description":"dev.jordond.compass.geocoder.web.ForwardHttpApiPlatformGeocoder.ForwardHttpApiPlatformGeocoder","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-forward-http-api-platform-geocoder/-forward-http-api-platform-geocoder.html","searchKeys":["ForwardHttpApiPlatformGeocoder","constructor(endpoint: ForwardEndpoint, client: HttpClient)","dev.jordond.compass.geocoder.web.ForwardHttpApiPlatformGeocoder.ForwardHttpApiPlatformGeocoder"]},{"name":"constructor(endpoint: ReverseEndpoint, client: HttpClient)","description":"dev.jordond.compass.geocoder.web.ReverseHttpApiPlatformGeocoder.ReverseHttpApiPlatformGeocoder","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-reverse-http-api-platform-geocoder/-reverse-http-api-platform-geocoder.html","searchKeys":["ReverseHttpApiPlatformGeocoder","constructor(endpoint: ReverseEndpoint, client: HttpClient)","dev.jordond.compass.geocoder.web.ReverseHttpApiPlatformGeocoder.ReverseHttpApiPlatformGeocoder"]},{"name":"fun <Params, Result> HttpApiEndpoint(url: (Params) -> String, mapResponse: suspend (HttpResponse) -> Result): HttpApiEndpoint<Params, Result>","description":"dev.jordond.compass.geocoder.web.HttpApiEndpoint","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-http-api-endpoint.html","searchKeys":["HttpApiEndpoint","fun <Params, Result> HttpApiEndpoint(url: (Params) -> String, mapResponse: suspend (HttpResponse) -> Result): HttpApiEndpoint<Params, Result>","dev.jordond.compass.geocoder.web.HttpApiEndpoint"]},{"name":"fun ForwardGeocoder(endpoint: ForwardEndpoint, json: Json = HttpApiPlatformGeocoder.json(), httpClient: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): ForwardGeocoder","description":"dev.jordond.compass.geocoder.web.ForwardGeocoder","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-forward-geocoder.html","searchKeys":["ForwardGeocoder","fun ForwardGeocoder(endpoint: ForwardEndpoint, json: Json = HttpApiPlatformGeocoder.json(), httpClient: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): ForwardGeocoder","dev.jordond.compass.geocoder.web.ForwardGeocoder"]},{"name":"fun Geocoder(forwardEndpoint: ForwardEndpoint, reverseEndpoint: ReverseEndpoint, json: Json = HttpApiPlatformGeocoder.json(), httpClient: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","description":"dev.jordond.compass.geocoder.web.Geocoder","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-geocoder.html","searchKeys":["Geocoder","fun Geocoder(forwardEndpoint: ForwardEndpoint, reverseEndpoint: ReverseEndpoint, json: Json = HttpApiPlatformGeocoder.json(), httpClient: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","dev.jordond.compass.geocoder.web.Geocoder"]},{"name":"fun Geocoder(platformGeocoder: HttpApiPlatformGeocoder, dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","description":"dev.jordond.compass.geocoder.web.Geocoder","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-geocoder.html","searchKeys":["Geocoder","fun Geocoder(platformGeocoder: HttpApiPlatformGeocoder, dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","dev.jordond.compass.geocoder.web.Geocoder"]},{"name":"fun HttpApiPlatformGeocoder(forwardEndpoint: ForwardEndpoint, reverseEndpoint: ReverseEndpoint, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json)): HttpApiPlatformGeocoder","description":"dev.jordond.compass.geocoder.web.HttpApiPlatformGeocoder","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-http-api-platform-geocoder.html","searchKeys":["HttpApiPlatformGeocoder","fun HttpApiPlatformGeocoder(forwardEndpoint: ForwardEndpoint, reverseEndpoint: ReverseEndpoint, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json)): HttpApiPlatformGeocoder","dev.jordond.compass.geocoder.web.HttpApiPlatformGeocoder"]},{"name":"fun QueryParameters.parametersOf(vararg parameters: Pair<String, Any?>): Map<String, String>","description":"dev.jordond.compass.geocoder.web.parameter.parametersOf","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web.parameter/parameters-of.html","searchKeys":["parametersOf","fun QueryParameters.parametersOf(vararg parameters: Pair<String, Any?>): Map<String, String>","dev.jordond.compass.geocoder.web.parameter.parametersOf"]},{"name":"fun ReverseGeocoder(endpoint: ReverseEndpoint, json: Json = HttpApiPlatformGeocoder.json(), httpClient: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): ReverseGeocoder","description":"dev.jordond.compass.geocoder.web.ReverseGeocoder","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-reverse-geocoder.html","searchKeys":["ReverseGeocoder","fun ReverseGeocoder(endpoint: ReverseEndpoint, json: Json = HttpApiPlatformGeocoder.json(), httpClient: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): ReverseGeocoder","dev.jordond.compass.geocoder.web.ReverseGeocoder"]},{"name":"fun httpClient(json: Json = json(), enableLogging: Boolean = false, enableRetry: Boolean = true, maxRetries: Int = 3, block: HttpClientConfig<*>.() -> Unit = {}): HttpClient","description":"dev.jordond.compass.geocoder.web.HttpApiPlatformGeocoder.Companion.httpClient","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-http-api-platform-geocoder/-companion/http-client.html","searchKeys":["httpClient","fun httpClient(json: Json = json(), enableLogging: Boolean = false, enableRetry: Boolean = true, maxRetries: Int = 3, block: HttpClientConfig<*>.() -> Unit = {}): HttpClient","dev.jordond.compass.geocoder.web.HttpApiPlatformGeocoder.Companion.httpClient"]},{"name":"fun json(block: JsonBuilder.() -> Unit = {}): Json","description":"dev.jordond.compass.geocoder.web.HttpApiPlatformGeocoder.Companion.json","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-http-api-platform-geocoder/-companion/json.html","searchKeys":["json","fun json(block: JsonBuilder.() -> Unit = {}): Json","dev.jordond.compass.geocoder.web.HttpApiPlatformGeocoder.Companion.json"]},{"name":"interface HttpApiEndpoint<Params, Result>","description":"dev.jordond.compass.geocoder.web.HttpApiEndpoint","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-http-api-endpoint/index.html","searchKeys":["HttpApiEndpoint","interface HttpApiEndpoint<Params, Result>","dev.jordond.compass.geocoder.web.HttpApiEndpoint"]},{"name":"interface HttpApiPlatformGeocoder : PlatformGeocoder","description":"dev.jordond.compass.geocoder.web.HttpApiPlatformGeocoder","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-http-api-platform-geocoder/index.html","searchKeys":["HttpApiPlatformGeocoder","interface HttpApiPlatformGeocoder : PlatformGeocoder","dev.jordond.compass.geocoder.web.HttpApiPlatformGeocoder"]},{"name":"interface QueryParamListValue<T : QueryParamValue> : QueryParamValue","description":"dev.jordond.compass.geocoder.web.parameter.QueryParamListValue","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web.parameter/-query-param-list-value/index.html","searchKeys":["QueryParamListValue","interface QueryParamListValue<T : QueryParamValue> : QueryParamValue","dev.jordond.compass.geocoder.web.parameter.QueryParamListValue"]},{"name":"interface QueryParamValue","description":"dev.jordond.compass.geocoder.web.parameter.QueryParamValue","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web.parameter/-query-param-value/index.html","searchKeys":["QueryParamValue","interface QueryParamValue","dev.jordond.compass.geocoder.web.parameter.QueryParamValue"]},{"name":"interface QueryParameters","description":"dev.jordond.compass.geocoder.web.parameter.QueryParameters","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web.parameter/-query-parameters/index.html","searchKeys":["QueryParameters","interface QueryParameters","dev.jordond.compass.geocoder.web.parameter.QueryParameters"]},{"name":"interface QueryParametersBuilder<T : QueryParameters>","description":"dev.jordond.compass.geocoder.web.parameter.QueryParametersBuilder","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web.parameter/-query-parameters-builder/index.html","searchKeys":["QueryParametersBuilder","interface QueryParametersBuilder<T : QueryParameters>","dev.jordond.compass.geocoder.web.parameter.QueryParametersBuilder"]},{"name":"object Companion","description":"dev.jordond.compass.geocoder.web.HttpApiPlatformGeocoder.Companion","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-http-api-platform-geocoder/-companion/index.html","searchKeys":["Companion","object Companion","dev.jordond.compass.geocoder.web.HttpApiPlatformGeocoder.Companion"]},{"name":"open fun encode(): String","description":"dev.jordond.compass.geocoder.web.parameter.QueryParameters.encode","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web.parameter/-query-parameters/encode.html","searchKeys":["encode","open fun encode(): String","dev.jordond.compass.geocoder.web.parameter.QueryParameters.encode"]},{"name":"open override fun isAvailable(): Boolean","description":"dev.jordond.compass.geocoder.web.ForwardHttpApiPlatformGeocoder.isAvailable","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-forward-http-api-platform-geocoder/is-available.html","searchKeys":["isAvailable","open override fun isAvailable(): Boolean","dev.jordond.compass.geocoder.web.ForwardHttpApiPlatformGeocoder.isAvailable"]},{"name":"open override fun isAvailable(): Boolean","description":"dev.jordond.compass.geocoder.web.ReverseHttpApiPlatformGeocoder.isAvailable","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-reverse-http-api-platform-geocoder/is-available.html","searchKeys":["isAvailable","open override fun isAvailable(): Boolean","dev.jordond.compass.geocoder.web.ReverseHttpApiPlatformGeocoder.isAvailable"]},{"name":"open override val value: String","description":"dev.jordond.compass.geocoder.web.parameter.QueryParamListValue.value","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web.parameter/-query-param-list-value/value.html","searchKeys":["value","open override val value: String","dev.jordond.compass.geocoder.web.parameter.QueryParamListValue.value"]},{"name":"open suspend override fun forward(address: String): List<Coordinates>","description":"dev.jordond.compass.geocoder.web.ForwardHttpApiPlatformGeocoder.forward","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-forward-http-api-platform-geocoder/forward.html","searchKeys":["forward","open suspend override fun forward(address: String): List<Coordinates>","dev.jordond.compass.geocoder.web.ForwardHttpApiPlatformGeocoder.forward"]},{"name":"open suspend override fun forward(address: String): List<Coordinates>","description":"dev.jordond.compass.geocoder.web.ReverseHttpApiPlatformGeocoder.forward","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-reverse-http-api-platform-geocoder/forward.html","searchKeys":["forward","open suspend override fun forward(address: String): List<Coordinates>","dev.jordond.compass.geocoder.web.ReverseHttpApiPlatformGeocoder.forward"]},{"name":"open suspend override fun reverse(latitude: Double, longitude: Double): List<Place>","description":"dev.jordond.compass.geocoder.web.ForwardHttpApiPlatformGeocoder.reverse","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-forward-http-api-platform-geocoder/reverse.html","searchKeys":["reverse","open suspend override fun reverse(latitude: Double, longitude: Double): List<Place>","dev.jordond.compass.geocoder.web.ForwardHttpApiPlatformGeocoder.reverse"]},{"name":"open suspend override fun reverse(latitude: Double, longitude: Double): List<Place>","description":"dev.jordond.compass.geocoder.web.ReverseHttpApiPlatformGeocoder.reverse","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-reverse-http-api-platform-geocoder/reverse.html","searchKeys":["reverse","open suspend override fun reverse(latitude: Double, longitude: Double): List<Place>","dev.jordond.compass.geocoder.web.ReverseHttpApiPlatformGeocoder.reverse"]},{"name":"open val separator: String","description":"dev.jordond.compass.geocoder.web.parameter.QueryParamListValue.separator","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web.parameter/-query-param-list-value/separator.html","searchKeys":["separator","open val separator: String","dev.jordond.compass.geocoder.web.parameter.QueryParamListValue.separator"]},{"name":"typealias ForwardEndpoint = HttpApiEndpoint<String, List<Coordinates>>","description":"dev.jordond.compass.geocoder.web.ForwardEndpoint","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-forward-endpoint/index.html","searchKeys":["ForwardEndpoint","typealias ForwardEndpoint = HttpApiEndpoint<String, List<Coordinates>>","dev.jordond.compass.geocoder.web.ForwardEndpoint"]},{"name":"typealias ReverseEndpoint = HttpApiEndpoint<Coordinates, List<Place>>","description":"dev.jordond.compass.geocoder.web.ReverseEndpoint","location":"compass-geocoder-web/dev.jordond.compass.geocoder.web/-reverse-endpoint/index.html","searchKeys":["ReverseEndpoint","typealias ReverseEndpoint = HttpApiEndpoint<Coordinates, List<Place>>","dev.jordond.compass.geocoder.web.ReverseEndpoint"]},{"name":"fun Geolocator(handlePermissions: Boolean = true, dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","description":"dev.jordond.compass.geolocation.mobile.Geolocator","location":"compass-geolocation-mobile/dev.jordond.compass.geolocation.mobile/-geolocator.html","searchKeys":["Geolocator","fun Geolocator(handlePermissions: Boolean = true, dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","dev.jordond.compass.geolocation.mobile.Geolocator"]},{"name":"fun Geolocator.Companion.mobile(handlePermissions: Boolean = true, dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","description":"dev.jordond.compass.geolocation.mobile.mobile","location":"compass-geolocation-mobile/dev.jordond.compass.geolocation.mobile/mobile.html","searchKeys":["mobile","fun Geolocator.Companion.mobile(handlePermissions: Boolean = true, dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","dev.jordond.compass.geolocation.mobile.mobile"]},{"name":"fun Locator.Companion.mobile(handlePermissions: Boolean = true): MobileLocator","description":"dev.jordond.compass.geolocation.mobile.mobile","location":"compass-geolocation-mobile/dev.jordond.compass.geolocation.mobile/mobile.html","searchKeys":["mobile","fun Locator.Companion.mobile(handlePermissions: Boolean = true): MobileLocator","dev.jordond.compass.geolocation.mobile.mobile"]},{"name":"fun MobileGeolocator(handlePermissions: Boolean = true, dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","description":"dev.jordond.compass.geolocation.mobile.MobileGeolocator","location":"compass-geolocation-mobile/dev.jordond.compass.geolocation.mobile/-mobile-geolocator.html","searchKeys":["MobileGeolocator","fun MobileGeolocator(handlePermissions: Boolean = true, dispatcher: CoroutineDispatcher = Dispatchers.Default): Geolocator","dev.jordond.compass.geolocation.mobile.MobileGeolocator"]},{"name":"fun MobileLocator(handlePermissions: Boolean = true): MobileLocator","description":"dev.jordond.compass.geolocation.mobile.MobileLocator","location":"compass-geolocation-mobile/dev.jordond.compass.geolocation.mobile/-mobile-locator.html","searchKeys":["MobileLocator","fun MobileLocator(handlePermissions: Boolean = true): MobileLocator","dev.jordond.compass.geolocation.mobile.MobileLocator"]},{"name":"interface MobileLocator : PermissionLocator","description":"dev.jordond.compass.geolocation.mobile.MobileLocator","location":"compass-geolocation-mobile/dev.jordond.compass.geolocation.mobile/-mobile-locator/index.html","searchKeys":["MobileLocator","interface MobileLocator : PermissionLocator","dev.jordond.compass.geolocation.mobile.MobileLocator"]},{"name":"class ContextProvider(val context: Context)","description":"dev.jordond.compass.tools.ContextProvider","location":"compass-tools-android/dev.jordond.compass.tools/-context-provider/index.html","searchKeys":["ContextProvider","class ContextProvider(val context: Context)","dev.jordond.compass.tools.ContextProvider"]},{"name":"constructor(context: Context)","description":"dev.jordond.compass.tools.ContextProvider.ContextProvider","location":"compass-tools-android/dev.jordond.compass.tools/-context-provider/-context-provider.html","searchKeys":["ContextProvider","constructor(context: Context)","dev.jordond.compass.tools.ContextProvider.ContextProvider"]},{"name":"fun create(context: Context): ContextProvider","description":"dev.jordond.compass.tools.ContextProvider.Companion.create","location":"compass-tools-android/dev.jordond.compass.tools/-context-provider/-companion/create.html","searchKeys":["create","fun create(context: Context): ContextProvider","dev.jordond.compass.tools.ContextProvider.Companion.create"]},{"name":"fun getInstance(): ContextProvider","description":"dev.jordond.compass.tools.ContextProvider.Companion.getInstance","location":"compass-tools-android/dev.jordond.compass.tools/-context-provider/-companion/get-instance.html","searchKeys":["getInstance","fun getInstance(): ContextProvider","dev.jordond.compass.tools.ContextProvider.Companion.getInstance"]},{"name":"object Companion","description":"dev.jordond.compass.tools.ContextProvider.Companion","location":"compass-tools-android/dev.jordond.compass.tools/-context-provider/-companion/index.html","searchKeys":["Companion","object Companion","dev.jordond.compass.tools.ContextProvider.Companion"]},{"name":"val context: Context","description":"dev.jordond.compass.tools.ContextProvider.context","location":"compass-tools-android/dev.jordond.compass.tools/-context-provider/context.html","searchKeys":["context","val context: Context","dev.jordond.compass.tools.ContextProvider.context"]},{"name":"Approximate","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.Approximate","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type/-approximate/index.html","searchKeys":["Approximate","Approximate","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.Approximate"]},{"name":"GeometricCenter","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.GeometricCenter","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type/-geometric-center/index.html","searchKeys":["GeometricCenter","GeometricCenter","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.GeometricCenter"]},{"name":"RangeInterpolated","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.RangeInterpolated","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type/-range-interpolated/index.html","searchKeys":["RangeInterpolated","RangeInterpolated","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.RangeInterpolated"]},{"name":"Rooftop","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.Rooftop","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type/-rooftop/index.html","searchKeys":["Rooftop","Rooftop","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.Rooftop"]},{"name":"class GoogleMapsForwardEndpoint(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters()) : HttpApiEndpoint<String, List<Coordinates>> ","description":"dev.jordond.compass.geocoder.web.GoogleMapsForwardEndpoint","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-forward-endpoint/index.html","searchKeys":["GoogleMapsForwardEndpoint","class GoogleMapsForwardEndpoint(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters()) : HttpApiEndpoint<String, List<Coordinates>> ","dev.jordond.compass.geocoder.web.GoogleMapsForwardEndpoint"]},{"name":"class GoogleMapsLocationTypeList(val values: List<GoogleMapsLocationType>) : QueryParamListValue<GoogleMapsLocationType> ","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationTypeList","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type-list/index.html","searchKeys":["GoogleMapsLocationTypeList","class GoogleMapsLocationTypeList(val values: List<GoogleMapsLocationType>) : QueryParamListValue<GoogleMapsLocationType> ","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationTypeList"]},{"name":"class GoogleMapsParameters(val locationType: GoogleMapsLocationTypeList? = null) : QueryParameters","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsParameters","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-parameters/index.html","searchKeys":["GoogleMapsParameters","class GoogleMapsParameters(val locationType: GoogleMapsLocationTypeList? = null) : QueryParameters","dev.jordond.compass.geocoder.web.parameter.GoogleMapsParameters"]},{"name":"class GoogleMapsParametersBuilder : QueryParametersBuilder<GoogleMapsParameters> ","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsParametersBuilder","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-parameters-builder/index.html","searchKeys":["GoogleMapsParametersBuilder","class GoogleMapsParametersBuilder : QueryParametersBuilder<GoogleMapsParameters> ","dev.jordond.compass.geocoder.web.parameter.GoogleMapsParametersBuilder"]},{"name":"class GoogleMapsReverseEndpoint(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters()) : HttpApiEndpoint<Coordinates, List<Place>> ","description":"dev.jordond.compass.geocoder.web.GoogleMapsReverseEndpoint","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-reverse-endpoint/index.html","searchKeys":["GoogleMapsReverseEndpoint","class GoogleMapsReverseEndpoint(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters()) : HttpApiEndpoint<Coordinates, List<Place>> ","dev.jordond.compass.geocoder.web.GoogleMapsReverseEndpoint"]},{"name":"constructor()","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsParametersBuilder.GoogleMapsParametersBuilder","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-parameters-builder/-google-maps-parameters-builder.html","searchKeys":["GoogleMapsParametersBuilder","constructor()","dev.jordond.compass.geocoder.web.parameter.GoogleMapsParametersBuilder.GoogleMapsParametersBuilder"]},{"name":"constructor(apiKey: String, block: GoogleMapsParametersBuilder.() -> Unit)","description":"dev.jordond.compass.geocoder.web.GoogleMapsForwardEndpoint.GoogleMapsForwardEndpoint","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-forward-endpoint/-google-maps-forward-endpoint.html","searchKeys":["GoogleMapsForwardEndpoint","constructor(apiKey: String, block: GoogleMapsParametersBuilder.() -> Unit)","dev.jordond.compass.geocoder.web.GoogleMapsForwardEndpoint.GoogleMapsForwardEndpoint"]},{"name":"constructor(apiKey: String, block: GoogleMapsParametersBuilder.() -> Unit)","description":"dev.jordond.compass.geocoder.web.GoogleMapsReverseEndpoint.GoogleMapsReverseEndpoint","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-reverse-endpoint/-google-maps-reverse-endpoint.html","searchKeys":["GoogleMapsReverseEndpoint","constructor(apiKey: String, block: GoogleMapsParametersBuilder.() -> Unit)","dev.jordond.compass.geocoder.web.GoogleMapsReverseEndpoint.GoogleMapsReverseEndpoint"]},{"name":"constructor(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters())","description":"dev.jordond.compass.geocoder.web.GoogleMapsForwardEndpoint.GoogleMapsForwardEndpoint","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-forward-endpoint/-google-maps-forward-endpoint.html","searchKeys":["GoogleMapsForwardEndpoint","constructor(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters())","dev.jordond.compass.geocoder.web.GoogleMapsForwardEndpoint.GoogleMapsForwardEndpoint"]},{"name":"constructor(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters())","description":"dev.jordond.compass.geocoder.web.GoogleMapsReverseEndpoint.GoogleMapsReverseEndpoint","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-reverse-endpoint/-google-maps-reverse-endpoint.html","searchKeys":["GoogleMapsReverseEndpoint","constructor(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters())","dev.jordond.compass.geocoder.web.GoogleMapsReverseEndpoint.GoogleMapsReverseEndpoint"]},{"name":"constructor(locationType: GoogleMapsLocationTypeList? = null)","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsParameters.GoogleMapsParameters","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-parameters/-google-maps-parameters.html","searchKeys":["GoogleMapsParameters","constructor(locationType: GoogleMapsLocationTypeList? = null)","dev.jordond.compass.geocoder.web.parameter.GoogleMapsParameters.GoogleMapsParameters"]},{"name":"constructor(values: List<GoogleMapsLocationType>)","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationTypeList.GoogleMapsLocationTypeList","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type-list/-google-maps-location-type-list.html","searchKeys":["GoogleMapsLocationTypeList","constructor(values: List<GoogleMapsLocationType>)","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationTypeList.GoogleMapsLocationTypeList"]},{"name":"constructor(vararg values: GoogleMapsLocationType)","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationTypeList.GoogleMapsLocationTypeList","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type-list/-google-maps-location-type-list.html","searchKeys":["GoogleMapsLocationTypeList","constructor(vararg values: GoogleMapsLocationType)","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationTypeList.GoogleMapsLocationTypeList"]},{"name":"enum GoogleMapsLocationType : Enum<GoogleMapsLocationType> , QueryParamValue","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type/index.html","searchKeys":["GoogleMapsLocationType","enum GoogleMapsLocationType : Enum<GoogleMapsLocationType> , QueryParamValue","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType"]},{"name":"fun Geocoder.Companion.googleMaps(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default, block: GoogleMapsParametersBuilder.() -> Unit): Geocoder","description":"dev.jordond.compass.geocoder.web.googleMaps","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/google-maps.html","searchKeys":["googleMaps","fun Geocoder.Companion.googleMaps(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default, block: GoogleMapsParametersBuilder.() -> Unit): Geocoder","dev.jordond.compass.geocoder.web.googleMaps"]},{"name":"fun Geocoder.Companion.googleMaps(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","description":"dev.jordond.compass.geocoder.web.googleMaps","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/google-maps.html","searchKeys":["googleMaps","fun Geocoder.Companion.googleMaps(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","dev.jordond.compass.geocoder.web.googleMaps"]},{"name":"fun GoogleMapsGeocoder(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default, block: GoogleMapsParametersBuilder.() -> Unit): Geocoder","description":"dev.jordond.compass.geocoder.web.GoogleMapsGeocoder","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-geocoder.html","searchKeys":["GoogleMapsGeocoder","fun GoogleMapsGeocoder(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default, block: GoogleMapsParametersBuilder.() -> Unit): Geocoder","dev.jordond.compass.geocoder.web.GoogleMapsGeocoder"]},{"name":"fun GoogleMapsGeocoder(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","description":"dev.jordond.compass.geocoder.web.GoogleMapsGeocoder","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-geocoder.html","searchKeys":["GoogleMapsGeocoder","fun GoogleMapsGeocoder(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), dispatcher: CoroutineDispatcher = Dispatchers.Default): Geocoder","dev.jordond.compass.geocoder.web.GoogleMapsGeocoder"]},{"name":"fun GoogleMapsPlatformGeocoder(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), block: GoogleMapsParametersBuilder.() -> Unit): GoogleMapsPlatformGeocoder","description":"dev.jordond.compass.geocoder.web.GoogleMapsPlatformGeocoder","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-platform-geocoder.html","searchKeys":["GoogleMapsPlatformGeocoder","fun GoogleMapsPlatformGeocoder(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), block: GoogleMapsParametersBuilder.() -> Unit): GoogleMapsPlatformGeocoder","dev.jordond.compass.geocoder.web.GoogleMapsPlatformGeocoder"]},{"name":"fun GoogleMapsPlatformGeocoder(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json)): GoogleMapsPlatformGeocoder","description":"dev.jordond.compass.geocoder.web.GoogleMapsPlatformGeocoder","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-platform-geocoder.html","searchKeys":["GoogleMapsPlatformGeocoder","fun GoogleMapsPlatformGeocoder(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json)): GoogleMapsPlatformGeocoder","dev.jordond.compass.geocoder.web.GoogleMapsPlatformGeocoder"]},{"name":"fun PlatformGeocoder.Companion.googleMaps(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), block: GoogleMapsParametersBuilder.() -> Unit): GoogleMapsPlatformGeocoder","description":"dev.jordond.compass.geocoder.web.googleMaps","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/google-maps.html","searchKeys":["googleMaps","fun PlatformGeocoder.Companion.googleMaps(apiKey: String, json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json), block: GoogleMapsParametersBuilder.() -> Unit): GoogleMapsPlatformGeocoder","dev.jordond.compass.geocoder.web.googleMaps"]},{"name":"fun PlatformGeocoder.Companion.googleMaps(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json)): GoogleMapsPlatformGeocoder","description":"dev.jordond.compass.geocoder.web.googleMaps","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/google-maps.html","searchKeys":["googleMaps","fun PlatformGeocoder.Companion.googleMaps(apiKey: String, parameters: GoogleMapsParameters = GoogleMapsParameters(), json: Json = HttpApiPlatformGeocoder.json(), client: HttpClient = HttpApiPlatformGeocoder.httpClient(json)): GoogleMapsPlatformGeocoder","dev.jordond.compass.geocoder.web.googleMaps"]},{"name":"fun googleMapsParameters(block: GoogleMapsParametersBuilder.() -> Unit): GoogleMapsParameters","description":"dev.jordond.compass.geocoder.web.parameter.googleMapsParameters","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/google-maps-parameters.html","searchKeys":["googleMapsParameters","fun googleMapsParameters(block: GoogleMapsParametersBuilder.() -> Unit): GoogleMapsParameters","dev.jordond.compass.geocoder.web.parameter.googleMapsParameters"]},{"name":"fun locationType(location: GoogleMapsLocationType)","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsParametersBuilder.locationType","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-parameters-builder/location-type.html","searchKeys":["locationType","fun locationType(location: GoogleMapsLocationType)","dev.jordond.compass.geocoder.web.parameter.GoogleMapsParametersBuilder.locationType"]},{"name":"fun locationTypes(locations: List<GoogleMapsLocationType>)","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsParametersBuilder.locationTypes","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-parameters-builder/location-types.html","searchKeys":["locationTypes","fun locationTypes(locations: List<GoogleMapsLocationType>)","dev.jordond.compass.geocoder.web.parameter.GoogleMapsParametersBuilder.locationTypes"]},{"name":"fun locationTypes(vararg locations: GoogleMapsLocationType)","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsParametersBuilder.locationTypes","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-parameters-builder/location-types.html","searchKeys":["locationTypes","fun locationTypes(vararg locations: GoogleMapsLocationType)","dev.jordond.compass.geocoder.web.parameter.GoogleMapsParametersBuilder.locationTypes"]},{"name":"fun valueOf(value: String): GoogleMapsLocationType","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.valueOf","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): GoogleMapsLocationType","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.valueOf"]},{"name":"fun values(): Array<GoogleMapsLocationType>","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.values","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type/values.html","searchKeys":["values","fun values(): Array<GoogleMapsLocationType>","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.values"]},{"name":"interface GoogleMapsPlatformGeocoder : HttpApiPlatformGeocoder","description":"dev.jordond.compass.geocoder.web.GoogleMapsPlatformGeocoder","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-platform-geocoder/index.html","searchKeys":["GoogleMapsPlatformGeocoder","interface GoogleMapsPlatformGeocoder : HttpApiPlatformGeocoder","dev.jordond.compass.geocoder.web.GoogleMapsPlatformGeocoder"]},{"name":"object Companion","description":"dev.jordond.compass.geocoder.web.GoogleMapsPlatformGeocoder.Companion","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-platform-geocoder/-companion/index.html","searchKeys":["Companion","object Companion","dev.jordond.compass.geocoder.web.GoogleMapsPlatformGeocoder.Companion"]},{"name":"open override fun build(): GoogleMapsParameters","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsParametersBuilder.build","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-parameters-builder/build.html","searchKeys":["build","open override fun build(): GoogleMapsParameters","dev.jordond.compass.geocoder.web.parameter.GoogleMapsParametersBuilder.build"]},{"name":"open override fun url(param: Coordinates): String","description":"dev.jordond.compass.geocoder.web.GoogleMapsReverseEndpoint.url","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-reverse-endpoint/url.html","searchKeys":["url","open override fun url(param: Coordinates): String","dev.jordond.compass.geocoder.web.GoogleMapsReverseEndpoint.url"]},{"name":"open override fun url(param: String): String","description":"dev.jordond.compass.geocoder.web.GoogleMapsForwardEndpoint.url","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-forward-endpoint/url.html","searchKeys":["url","open override fun url(param: String): String","dev.jordond.compass.geocoder.web.GoogleMapsForwardEndpoint.url"]},{"name":"open override val parameters: Map<String, String>","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsParameters.parameters","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-parameters/parameters.html","searchKeys":["parameters","open override val parameters: Map<String, String>","dev.jordond.compass.geocoder.web.parameter.GoogleMapsParameters.parameters"]},{"name":"open override val separator: String","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationTypeList.separator","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type-list/separator.html","searchKeys":["separator","open override val separator: String","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationTypeList.separator"]},{"name":"open override val value: String","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.value","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type/value.html","searchKeys":["value","open override val value: String","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.value"]},{"name":"open override val values: List<GoogleMapsLocationType>","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationTypeList.values","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type-list/values.html","searchKeys":["values","open override val values: List<GoogleMapsLocationType>","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationTypeList.values"]},{"name":"open suspend override fun mapResponse(response: HttpResponse): List<Coordinates>","description":"dev.jordond.compass.geocoder.web.GoogleMapsForwardEndpoint.mapResponse","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-forward-endpoint/map-response.html","searchKeys":["mapResponse","open suspend override fun mapResponse(response: HttpResponse): List<Coordinates>","dev.jordond.compass.geocoder.web.GoogleMapsForwardEndpoint.mapResponse"]},{"name":"open suspend override fun mapResponse(response: HttpResponse): List<Place>","description":"dev.jordond.compass.geocoder.web.GoogleMapsReverseEndpoint.mapResponse","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web/-google-maps-reverse-endpoint/map-response.html","searchKeys":["mapResponse","open suspend override fun mapResponse(response: HttpResponse): List<Place>","dev.jordond.compass.geocoder.web.GoogleMapsReverseEndpoint.mapResponse"]},{"name":"val entries: EnumEntries<GoogleMapsLocationType>","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.entries","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-location-type/entries.html","searchKeys":["entries","val entries: EnumEntries<GoogleMapsLocationType>","dev.jordond.compass.geocoder.web.parameter.GoogleMapsLocationType.entries"]},{"name":"val locationType: GoogleMapsLocationTypeList? = null","description":"dev.jordond.compass.geocoder.web.parameter.GoogleMapsParameters.locationType","location":"compass-geocoder-web-googlemaps/dev.jordond.compass.geocoder.web.parameter/-google-maps-parameters/location-type.html","searchKeys":["locationType","val locationType: GoogleMapsLocationTypeList? = null","dev.jordond.compass.geocoder.web.parameter.GoogleMapsParameters.locationType"]},{"name":"class Altitude(val meters: Double, val accuracy: Float?)","description":"dev.jordond.compass.Altitude","location":"compass-core/dev.jordond.compass/-altitude/index.html","searchKeys":["Altitude","class Altitude(val meters: Double, val accuracy: Float?)","dev.jordond.compass.Altitude"]},{"name":"class Azimuth(val degrees: Float, val accuracy: Float?)","description":"dev.jordond.compass.Azimuth","location":"compass-core/dev.jordond.compass/-azimuth/index.html","searchKeys":["Azimuth","class Azimuth(val degrees: Float, val accuracy: Float?)","dev.jordond.compass.Azimuth"]},{"name":"class Coordinates(val latitude: Double, val longitude: Double)","description":"dev.jordond.compass.Coordinates","location":"compass-core/dev.jordond.compass/-coordinates/index.html","searchKeys":["Coordinates","class Coordinates(val latitude: Double, val longitude: Double)","dev.jordond.compass.Coordinates"]},{"name":"class Location(val coordinates: Coordinates, val accuracy: Double, val azimuth: Azimuth?, val speed: Speed?, val altitude: Altitude?, val timestampMillis: Long)","description":"dev.jordond.compass.Location","location":"compass-core/dev.jordond.compass/-location/index.html","searchKeys":["Location","class Location(val coordinates: Coordinates, val accuracy: Double, val azimuth: Azimuth?, val speed: Speed?, val altitude: Altitude?, val timestampMillis: Long)","dev.jordond.compass.Location"]},{"name":"class NotFoundException : Throwable","description":"dev.jordond.compass.exception.NotFoundException","location":"compass-core/dev.jordond.compass.exception/-not-found-exception/index.html","searchKeys":["NotFoundException","class NotFoundException : Throwable","dev.jordond.compass.exception.NotFoundException"]},{"name":"class NotSupportedException : Throwable","description":"dev.jordond.compass.exception.NotSupportedException","location":"compass-core/dev.jordond.compass.exception/-not-supported-exception/index.html","searchKeys":["NotSupportedException","class NotSupportedException : Throwable","dev.jordond.compass.exception.NotSupportedException"]},{"name":"class Place(val name: String?, val street: String?, val isoCountryCode: String?, val country: String?, val postalCode: String?, val administrativeArea: String?, val subAdministrativeArea: String?, val locality: String?, val subLocality: String?, val thoroughfare: String?, val subThoroughfare: String?)","description":"dev.jordond.compass.Place","location":"compass-core/dev.jordond.compass/-place/index.html","searchKeys":["Place","class Place(val name: String?, val street: String?, val isoCountryCode: String?, val country: String?, val postalCode: String?, val administrativeArea: String?, val subAdministrativeArea: String?, val locality: String?, val subLocality: String?, val thoroughfare: String?, val subThoroughfare: String?)","dev.jordond.compass.Place"]},{"name":"class Speed(val mps: Float, val accuracy: Float?)","description":"dev.jordond.compass.Speed","location":"compass-core/dev.jordond.compass/-speed/index.html","searchKeys":["Speed","class Speed(val mps: Float, val accuracy: Float?)","dev.jordond.compass.Speed"]},{"name":"constructor()","description":"dev.jordond.compass.exception.NotFoundException.NotFoundException","location":"compass-core/dev.jordond.compass.exception/-not-found-exception/-not-found-exception.html","searchKeys":["NotFoundException","constructor()","dev.jordond.compass.exception.NotFoundException.NotFoundException"]},{"name":"constructor()","description":"dev.jordond.compass.exception.NotSupportedException.NotSupportedException","location":"compass-core/dev.jordond.compass.exception/-not-supported-exception/-not-supported-exception.html","searchKeys":["NotSupportedException","constructor()","dev.jordond.compass.exception.NotSupportedException.NotSupportedException"]},{"name":"constructor(coordinates: Coordinates, accuracy: Double, azimuth: Azimuth?, speed: Speed?, altitude: Altitude?, timestampMillis: Long)","description":"dev.jordond.compass.Location.Location","location":"compass-core/dev.jordond.compass/-location/-location.html","searchKeys":["Location","constructor(coordinates: Coordinates, accuracy: Double, azimuth: Azimuth?, speed: Speed?, altitude: Altitude?, timestampMillis: Long)","dev.jordond.compass.Location.Location"]},{"name":"constructor(degrees: Float, accuracy: Float?)","description":"dev.jordond.compass.Azimuth.Azimuth","location":"compass-core/dev.jordond.compass/-azimuth/-azimuth.html","searchKeys":["Azimuth","constructor(degrees: Float, accuracy: Float?)","dev.jordond.compass.Azimuth.Azimuth"]},{"name":"constructor(latitude: Double, longitude: Double)","description":"dev.jordond.compass.Coordinates.Coordinates","location":"compass-core/dev.jordond.compass/-coordinates/-coordinates.html","searchKeys":["Coordinates","constructor(latitude: Double, longitude: Double)","dev.jordond.compass.Coordinates.Coordinates"]},{"name":"constructor(meters: Double, accuracy: Float?)","description":"dev.jordond.compass.Altitude.Altitude","location":"compass-core/dev.jordond.compass/-altitude/-altitude.html","searchKeys":["Altitude","constructor(meters: Double, accuracy: Float?)","dev.jordond.compass.Altitude.Altitude"]},{"name":"constructor(mps: Float, accuracy: Float?)","description":"dev.jordond.compass.Speed.Speed","location":"compass-core/dev.jordond.compass/-speed/-speed.html","searchKeys":["Speed","constructor(mps: Float, accuracy: Float?)","dev.jordond.compass.Speed.Speed"]},{"name":"constructor(name: String?, street: String?, isoCountryCode: String?, country: String?, postalCode: String?, administrativeArea: String?, subAdministrativeArea: String?, locality: String?, subLocality: String?, thoroughfare: String?, subThoroughfare: String?)","description":"dev.jordond.compass.Place.Place","location":"compass-core/dev.jordond.compass/-place/-place.html","searchKeys":["Place","constructor(name: String?, street: String?, isoCountryCode: String?, country: String?, postalCode: String?, administrativeArea: String?, subAdministrativeArea: String?, locality: String?, subLocality: String?, thoroughfare: String?, subThoroughfare: String?)","dev.jordond.compass.Place.Place"]},{"name":"val accuracy: Double","description":"dev.jordond.compass.Location.accuracy","location":"compass-core/dev.jordond.compass/-location/accuracy.html","searchKeys":["accuracy","val accuracy: Double","dev.jordond.compass.Location.accuracy"]},{"name":"val accuracy: Float?","description":"dev.jordond.compass.Altitude.accuracy","location":"compass-core/dev.jordond.compass/-altitude/accuracy.html","searchKeys":["accuracy","val accuracy: Float?","dev.jordond.compass.Altitude.accuracy"]},{"name":"val accuracy: Float?","description":"dev.jordond.compass.Azimuth.accuracy","location":"compass-core/dev.jordond.compass/-azimuth/accuracy.html","searchKeys":["accuracy","val accuracy: Float?","dev.jordond.compass.Azimuth.accuracy"]},{"name":"val accuracy: Float?","description":"dev.jordond.compass.Speed.accuracy","location":"compass-core/dev.jordond.compass/-speed/accuracy.html","searchKeys":["accuracy","val accuracy: Float?","dev.jordond.compass.Speed.accuracy"]},{"name":"val administrativeArea: String?","description":"dev.jordond.compass.Place.administrativeArea","location":"compass-core/dev.jordond.compass/-place/administrative-area.html","searchKeys":["administrativeArea","val administrativeArea: String?","dev.jordond.compass.Place.administrativeArea"]},{"name":"val altitude: Altitude?","description":"dev.jordond.compass.Location.altitude","location":"compass-core/dev.jordond.compass/-location/altitude.html","searchKeys":["altitude","val altitude: Altitude?","dev.jordond.compass.Location.altitude"]},{"name":"val azimuth: Azimuth?","description":"dev.jordond.compass.Location.azimuth","location":"compass-core/dev.jordond.compass/-location/azimuth.html","searchKeys":["azimuth","val azimuth: Azimuth?","dev.jordond.compass.Location.azimuth"]},{"name":"val coordinates: Coordinates","description":"dev.jordond.compass.Location.coordinates","location":"compass-core/dev.jordond.compass/-location/coordinates.html","searchKeys":["coordinates","val coordinates: Coordinates","dev.jordond.compass.Location.coordinates"]},{"name":"val country: String?","description":"dev.jordond.compass.Place.country","location":"compass-core/dev.jordond.compass/-place/country.html","searchKeys":["country","val country: String?","dev.jordond.compass.Place.country"]},{"name":"val degrees: Float","description":"dev.jordond.compass.Azimuth.degrees","location":"compass-core/dev.jordond.compass/-azimuth/degrees.html","searchKeys":["degrees","val degrees: Float","dev.jordond.compass.Azimuth.degrees"]},{"name":"val isEmpty: Boolean","description":"dev.jordond.compass.Place.isEmpty","location":"compass-core/dev.jordond.compass/-place/is-empty.html","searchKeys":["isEmpty","val isEmpty: Boolean","dev.jordond.compass.Place.isEmpty"]},{"name":"val isoCountryCode: String?","description":"dev.jordond.compass.Place.isoCountryCode","location":"compass-core/dev.jordond.compass/-place/iso-country-code.html","searchKeys":["isoCountryCode","val isoCountryCode: String?","dev.jordond.compass.Place.isoCountryCode"]},{"name":"val latitude: Double","description":"dev.jordond.compass.Coordinates.latitude","location":"compass-core/dev.jordond.compass/-coordinates/latitude.html","searchKeys":["latitude","val latitude: Double","dev.jordond.compass.Coordinates.latitude"]},{"name":"val locality: String?","description":"dev.jordond.compass.Place.locality","location":"compass-core/dev.jordond.compass/-place/locality.html","searchKeys":["locality","val locality: String?","dev.jordond.compass.Place.locality"]},{"name":"val longitude: Double","description":"dev.jordond.compass.Coordinates.longitude","location":"compass-core/dev.jordond.compass/-coordinates/longitude.html","searchKeys":["longitude","val longitude: Double","dev.jordond.compass.Coordinates.longitude"]},{"name":"val meters: Double","description":"dev.jordond.compass.Altitude.meters","location":"compass-core/dev.jordond.compass/-altitude/meters.html","searchKeys":["meters","val meters: Double","dev.jordond.compass.Altitude.meters"]},{"name":"val mps: Float","description":"dev.jordond.compass.Speed.mps","location":"compass-core/dev.jordond.compass/-speed/mps.html","searchKeys":["mps","val mps: Float","dev.jordond.compass.Speed.mps"]},{"name":"val name: String?","description":"dev.jordond.compass.Place.name","location":"compass-core/dev.jordond.compass/-place/name.html","searchKeys":["name","val name: String?","dev.jordond.compass.Place.name"]},{"name":"val postalCode: String?","description":"dev.jordond.compass.Place.postalCode","location":"compass-core/dev.jordond.compass/-place/postal-code.html","searchKeys":["postalCode","val postalCode: String?","dev.jordond.compass.Place.postalCode"]},{"name":"val speed: Speed?","description":"dev.jordond.compass.Location.speed","location":"compass-core/dev.jordond.compass/-location/speed.html","searchKeys":["speed","val speed: Speed?","dev.jordond.compass.Location.speed"]},{"name":"val street: String?","description":"dev.jordond.compass.Place.street","location":"compass-core/dev.jordond.compass/-place/street.html","searchKeys":["street","val street: String?","dev.jordond.compass.Place.street"]},{"name":"val subAdministrativeArea: String?","description":"dev.jordond.compass.Place.subAdministrativeArea","location":"compass-core/dev.jordond.compass/-place/sub-administrative-area.html","searchKeys":["subAdministrativeArea","val subAdministrativeArea: String?","dev.jordond.compass.Place.subAdministrativeArea"]},{"name":"val subLocality: String?","description":"dev.jordond.compass.Place.subLocality","location":"compass-core/dev.jordond.compass/-place/sub-locality.html","searchKeys":["subLocality","val subLocality: String?","dev.jordond.compass.Place.subLocality"]},{"name":"val subThoroughfare: String?","description":"dev.jordond.compass.Place.subThoroughfare","location":"compass-core/dev.jordond.compass/-place/sub-thoroughfare.html","searchKeys":["subThoroughfare","val subThoroughfare: String?","dev.jordond.compass.Place.subThoroughfare"]},{"name":"val thoroughfare: String?","description":"dev.jordond.compass.Place.thoroughfare","location":"compass-core/dev.jordond.compass/-place/thoroughfare.html","searchKeys":["thoroughfare","val thoroughfare: String?","dev.jordond.compass.Place.thoroughfare"]},{"name":"val timestampMillis: Long","description":"dev.jordond.compass.Location.timestampMillis","location":"compass-core/dev.jordond.compass/-location/timestamp-millis.html","searchKeys":["timestampMillis","val timestampMillis: Long","dev.jordond.compass.Location.timestampMillis"]}]